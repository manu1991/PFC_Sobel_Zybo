// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2014.4
// Copyright (C) 2014 Xilinx Inc. All rights reserved.
// 
// ===========================================================

#ifndef _sobel_HH_
#define _sobel_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "sobel_Block_proc.h"
#include "sobel_AXIvideo2Mat.h"
#include "sobel_Sobel.h"
#include "sobel_Mat2AXIvideo.h"
#include "FIFO_sobel_img_0_rows_V_channel.h"
#include "FIFO_sobel_img_0_rows_V_channel1.h"
#include "FIFO_sobel_img_0_cols_V_channel.h"
#include "FIFO_sobel_img_0_cols_V_channel1.h"
#include "FIFO_sobel_img_1_rows_V.h"
#include "FIFO_sobel_img_1_cols_V.h"
#include "FIFO_sobel_img_0_data_stream_0_V.h"
#include "FIFO_sobel_img_0_data_stream_1_V.h"
#include "FIFO_sobel_img_0_data_stream_2_V.h"
#include "FIFO_sobel_img_1_data_stream_0_V.h"
#include "FIFO_sobel_img_1_data_stream_1_V.h"
#include "FIFO_sobel_img_1_data_stream_2_V.h"

namespace ap_rtl {

struct sobel : public sc_module {
    // Port declarations 26
    sc_in< sc_lv<32> > INPUT_STREAM_TDATA;
    sc_in< sc_lv<4> > INPUT_STREAM_TKEEP;
    sc_in< sc_lv<4> > INPUT_STREAM_TSTRB;
    sc_in< sc_lv<1> > INPUT_STREAM_TUSER;
    sc_in< sc_lv<1> > INPUT_STREAM_TLAST;
    sc_in< sc_lv<1> > INPUT_STREAM_TID;
    sc_in< sc_lv<1> > INPUT_STREAM_TDEST;
    sc_out< sc_lv<32> > OUTPUT_STREAM_TDATA;
    sc_out< sc_lv<4> > OUTPUT_STREAM_TKEEP;
    sc_out< sc_lv<4> > OUTPUT_STREAM_TSTRB;
    sc_out< sc_lv<1> > OUTPUT_STREAM_TUSER;
    sc_out< sc_lv<1> > OUTPUT_STREAM_TLAST;
    sc_out< sc_lv<1> > OUTPUT_STREAM_TID;
    sc_out< sc_lv<1> > OUTPUT_STREAM_TDEST;
    sc_in< sc_lv<32> > rows;
    sc_in< sc_lv<32> > cols;
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst_n;
    sc_in< sc_logic > ap_start;
    sc_in< sc_logic > INPUT_STREAM_TVALID;
    sc_out< sc_logic > INPUT_STREAM_TREADY;
    sc_out< sc_logic > OUTPUT_STREAM_TVALID;
    sc_in< sc_logic > OUTPUT_STREAM_TREADY;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;


    // Module declarations
    sobel(sc_module_name name);
    SC_HAS_PROCESS(sobel);

    ~sobel();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    sobel_Block_proc* sobel_Block_proc_U0;
    sobel_AXIvideo2Mat* sobel_AXIvideo2Mat_U0;
    sobel_Sobel* sobel_Sobel_U0;
    sobel_Mat2AXIvideo* sobel_Mat2AXIvideo_U0;
    FIFO_sobel_img_0_rows_V_channel* img_0_rows_V_channel_U;
    FIFO_sobel_img_0_rows_V_channel1* img_0_rows_V_channel1_U;
    FIFO_sobel_img_0_cols_V_channel* img_0_cols_V_channel_U;
    FIFO_sobel_img_0_cols_V_channel1* img_0_cols_V_channel1_U;
    FIFO_sobel_img_1_rows_V* img_1_rows_V_U;
    FIFO_sobel_img_1_cols_V* img_1_cols_V_U;
    FIFO_sobel_img_0_data_stream_0_V* img_0_data_stream_0_V_U;
    FIFO_sobel_img_0_data_stream_1_V* img_0_data_stream_1_V_U;
    FIFO_sobel_img_0_data_stream_2_V* img_0_data_stream_2_V_U;
    FIFO_sobel_img_1_data_stream_0_V* img_1_data_stream_0_V_U;
    FIFO_sobel_img_1_data_stream_1_V* img_1_data_stream_1_V_U;
    FIFO_sobel_img_1_data_stream_2_V* img_1_data_stream_2_V_U;
    sc_signal< sc_logic > ap_rst_n_inv;
    sc_signal< sc_logic > sobel_Block_proc_U0_ap_start;
    sc_signal< sc_logic > sobel_Block_proc_U0_ap_done;
    sc_signal< sc_logic > sobel_Block_proc_U0_ap_continue;
    sc_signal< sc_logic > sobel_Block_proc_U0_ap_idle;
    sc_signal< sc_logic > sobel_Block_proc_U0_ap_ready;
    sc_signal< sc_lv<32> > sobel_Block_proc_U0_rows;
    sc_signal< sc_lv<32> > sobel_Block_proc_U0_cols;
    sc_signal< sc_lv<12> > sobel_Block_proc_U0_ap_return_0;
    sc_signal< sc_lv<12> > sobel_Block_proc_U0_ap_return_1;
    sc_signal< sc_lv<12> > sobel_Block_proc_U0_ap_return_2;
    sc_signal< sc_lv<12> > sobel_Block_proc_U0_ap_return_3;
    sc_signal< sc_lv<12> > sobel_Block_proc_U0_ap_return_4;
    sc_signal< sc_lv<12> > sobel_Block_proc_U0_ap_return_5;
    sc_signal< sc_logic > ap_chn_write_sobel_Block_proc_U0_img_0_rows_V_channel;
    sc_signal< sc_logic > img_0_rows_V_channel_full_n;
    sc_signal< sc_logic > ap_reg_ready_img_0_rows_V_channel_full_n;
    sc_signal< sc_logic > ap_sig_ready_img_0_rows_V_channel_full_n;
    sc_signal< sc_logic > ap_chn_write_sobel_Block_proc_U0_img_0_cols_V_channel;
    sc_signal< sc_logic > img_0_cols_V_channel_full_n;
    sc_signal< sc_logic > ap_reg_ready_img_0_cols_V_channel_full_n;
    sc_signal< sc_logic > ap_sig_ready_img_0_cols_V_channel_full_n;
    sc_signal< sc_logic > ap_chn_write_sobel_Block_proc_U0_img_1_cols_V;
    sc_signal< sc_logic > img_1_cols_V_full_n;
    sc_signal< sc_logic > ap_reg_ready_img_1_cols_V_full_n;
    sc_signal< sc_logic > ap_sig_ready_img_1_cols_V_full_n;
    sc_signal< sc_logic > ap_chn_write_sobel_Block_proc_U0_img_1_rows_V;
    sc_signal< sc_logic > img_1_rows_V_full_n;
    sc_signal< sc_logic > ap_reg_ready_img_1_rows_V_full_n;
    sc_signal< sc_logic > ap_sig_ready_img_1_rows_V_full_n;
    sc_signal< sc_logic > ap_chn_write_sobel_Block_proc_U0_img_0_rows_V_channel1;
    sc_signal< sc_logic > img_0_rows_V_channel1_full_n;
    sc_signal< sc_logic > ap_reg_ready_img_0_rows_V_channel1_full_n;
    sc_signal< sc_logic > ap_sig_ready_img_0_rows_V_channel1_full_n;
    sc_signal< sc_logic > ap_chn_write_sobel_Block_proc_U0_img_0_cols_V_channel1;
    sc_signal< sc_logic > img_0_cols_V_channel1_full_n;
    sc_signal< sc_logic > ap_reg_ready_img_0_cols_V_channel1_full_n;
    sc_signal< sc_logic > ap_sig_ready_img_0_cols_V_channel1_full_n;
    sc_signal< sc_logic > sobel_AXIvideo2Mat_U0_ap_start;
    sc_signal< sc_logic > sobel_AXIvideo2Mat_U0_ap_done;
    sc_signal< sc_logic > sobel_AXIvideo2Mat_U0_ap_continue;
    sc_signal< sc_logic > sobel_AXIvideo2Mat_U0_ap_idle;
    sc_signal< sc_logic > sobel_AXIvideo2Mat_U0_ap_ready;
    sc_signal< sc_lv<32> > sobel_AXIvideo2Mat_U0_INPUT_STREAM_TDATA;
    sc_signal< sc_logic > sobel_AXIvideo2Mat_U0_INPUT_STREAM_TVALID;
    sc_signal< sc_logic > sobel_AXIvideo2Mat_U0_INPUT_STREAM_TREADY;
    sc_signal< sc_lv<4> > sobel_AXIvideo2Mat_U0_INPUT_STREAM_TKEEP;
    sc_signal< sc_lv<4> > sobel_AXIvideo2Mat_U0_INPUT_STREAM_TSTRB;
    sc_signal< sc_lv<1> > sobel_AXIvideo2Mat_U0_INPUT_STREAM_TUSER;
    sc_signal< sc_lv<1> > sobel_AXIvideo2Mat_U0_INPUT_STREAM_TLAST;
    sc_signal< sc_lv<1> > sobel_AXIvideo2Mat_U0_INPUT_STREAM_TID;
    sc_signal< sc_lv<1> > sobel_AXIvideo2Mat_U0_INPUT_STREAM_TDEST;
    sc_signal< sc_lv<12> > sobel_AXIvideo2Mat_U0_img_rows_V_read;
    sc_signal< sc_lv<12> > sobel_AXIvideo2Mat_U0_img_cols_V_read;
    sc_signal< sc_lv<8> > sobel_AXIvideo2Mat_U0_img_data_stream_0_V_din;
    sc_signal< sc_logic > sobel_AXIvideo2Mat_U0_img_data_stream_0_V_full_n;
    sc_signal< sc_logic > sobel_AXIvideo2Mat_U0_img_data_stream_0_V_write;
    sc_signal< sc_lv<8> > sobel_AXIvideo2Mat_U0_img_data_stream_1_V_din;
    sc_signal< sc_logic > sobel_AXIvideo2Mat_U0_img_data_stream_1_V_full_n;
    sc_signal< sc_logic > sobel_AXIvideo2Mat_U0_img_data_stream_1_V_write;
    sc_signal< sc_lv<8> > sobel_AXIvideo2Mat_U0_img_data_stream_2_V_din;
    sc_signal< sc_logic > sobel_AXIvideo2Mat_U0_img_data_stream_2_V_full_n;
    sc_signal< sc_logic > sobel_AXIvideo2Mat_U0_img_data_stream_2_V_write;
    sc_signal< sc_logic > sobel_Sobel_U0_ap_start;
    sc_signal< sc_logic > sobel_Sobel_U0_ap_done;
    sc_signal< sc_logic > sobel_Sobel_U0_ap_continue;
    sc_signal< sc_logic > sobel_Sobel_U0_ap_idle;
    sc_signal< sc_logic > sobel_Sobel_U0_ap_ready;
    sc_signal< sc_lv<12> > sobel_Sobel_U0_p_src_rows_V_read;
    sc_signal< sc_lv<12> > sobel_Sobel_U0_p_src_cols_V_read;
    sc_signal< sc_lv<8> > sobel_Sobel_U0_p_src_data_stream_0_V_dout;
    sc_signal< sc_logic > sobel_Sobel_U0_p_src_data_stream_0_V_empty_n;
    sc_signal< sc_logic > sobel_Sobel_U0_p_src_data_stream_0_V_read;
    sc_signal< sc_lv<8> > sobel_Sobel_U0_p_src_data_stream_1_V_dout;
    sc_signal< sc_logic > sobel_Sobel_U0_p_src_data_stream_1_V_empty_n;
    sc_signal< sc_logic > sobel_Sobel_U0_p_src_data_stream_1_V_read;
    sc_signal< sc_lv<8> > sobel_Sobel_U0_p_src_data_stream_2_V_dout;
    sc_signal< sc_logic > sobel_Sobel_U0_p_src_data_stream_2_V_empty_n;
    sc_signal< sc_logic > sobel_Sobel_U0_p_src_data_stream_2_V_read;
    sc_signal< sc_lv<8> > sobel_Sobel_U0_p_dst_data_stream_0_V_din;
    sc_signal< sc_logic > sobel_Sobel_U0_p_dst_data_stream_0_V_full_n;
    sc_signal< sc_logic > sobel_Sobel_U0_p_dst_data_stream_0_V_write;
    sc_signal< sc_lv<8> > sobel_Sobel_U0_p_dst_data_stream_1_V_din;
    sc_signal< sc_logic > sobel_Sobel_U0_p_dst_data_stream_1_V_full_n;
    sc_signal< sc_logic > sobel_Sobel_U0_p_dst_data_stream_1_V_write;
    sc_signal< sc_lv<8> > sobel_Sobel_U0_p_dst_data_stream_2_V_din;
    sc_signal< sc_logic > sobel_Sobel_U0_p_dst_data_stream_2_V_full_n;
    sc_signal< sc_logic > sobel_Sobel_U0_p_dst_data_stream_2_V_write;
    sc_signal< sc_logic > sobel_Mat2AXIvideo_U0_ap_start;
    sc_signal< sc_logic > sobel_Mat2AXIvideo_U0_ap_done;
    sc_signal< sc_logic > sobel_Mat2AXIvideo_U0_ap_continue;
    sc_signal< sc_logic > sobel_Mat2AXIvideo_U0_ap_idle;
    sc_signal< sc_logic > sobel_Mat2AXIvideo_U0_ap_ready;
    sc_signal< sc_lv<12> > sobel_Mat2AXIvideo_U0_img_rows_V_read;
    sc_signal< sc_lv<12> > sobel_Mat2AXIvideo_U0_img_cols_V_read;
    sc_signal< sc_lv<8> > sobel_Mat2AXIvideo_U0_img_data_stream_0_V_dout;
    sc_signal< sc_logic > sobel_Mat2AXIvideo_U0_img_data_stream_0_V_empty_n;
    sc_signal< sc_logic > sobel_Mat2AXIvideo_U0_img_data_stream_0_V_read;
    sc_signal< sc_lv<8> > sobel_Mat2AXIvideo_U0_img_data_stream_1_V_dout;
    sc_signal< sc_logic > sobel_Mat2AXIvideo_U0_img_data_stream_1_V_empty_n;
    sc_signal< sc_logic > sobel_Mat2AXIvideo_U0_img_data_stream_1_V_read;
    sc_signal< sc_lv<8> > sobel_Mat2AXIvideo_U0_img_data_stream_2_V_dout;
    sc_signal< sc_logic > sobel_Mat2AXIvideo_U0_img_data_stream_2_V_empty_n;
    sc_signal< sc_logic > sobel_Mat2AXIvideo_U0_img_data_stream_2_V_read;
    sc_signal< sc_lv<32> > sobel_Mat2AXIvideo_U0_OUTPUT_STREAM_TDATA;
    sc_signal< sc_logic > sobel_Mat2AXIvideo_U0_OUTPUT_STREAM_TVALID;
    sc_signal< sc_logic > sobel_Mat2AXIvideo_U0_OUTPUT_STREAM_TREADY;
    sc_signal< sc_lv<4> > sobel_Mat2AXIvideo_U0_OUTPUT_STREAM_TKEEP;
    sc_signal< sc_lv<4> > sobel_Mat2AXIvideo_U0_OUTPUT_STREAM_TSTRB;
    sc_signal< sc_lv<1> > sobel_Mat2AXIvideo_U0_OUTPUT_STREAM_TUSER;
    sc_signal< sc_lv<1> > sobel_Mat2AXIvideo_U0_OUTPUT_STREAM_TLAST;
    sc_signal< sc_lv<1> > sobel_Mat2AXIvideo_U0_OUTPUT_STREAM_TID;
    sc_signal< sc_lv<1> > sobel_Mat2AXIvideo_U0_OUTPUT_STREAM_TDEST;
    sc_signal< sc_logic > ap_sig_hs_continue;
    sc_signal< sc_logic > img_0_rows_V_channel_U_ap_dummy_ce;
    sc_signal< sc_lv<12> > img_0_rows_V_channel_din;
    sc_signal< sc_logic > img_0_rows_V_channel_write;
    sc_signal< sc_lv<12> > img_0_rows_V_channel_dout;
    sc_signal< sc_logic > img_0_rows_V_channel_empty_n;
    sc_signal< sc_logic > img_0_rows_V_channel_read;
    sc_signal< sc_logic > img_0_rows_V_channel1_U_ap_dummy_ce;
    sc_signal< sc_lv<12> > img_0_rows_V_channel1_din;
    sc_signal< sc_logic > img_0_rows_V_channel1_write;
    sc_signal< sc_lv<12> > img_0_rows_V_channel1_dout;
    sc_signal< sc_logic > img_0_rows_V_channel1_empty_n;
    sc_signal< sc_logic > img_0_rows_V_channel1_read;
    sc_signal< sc_logic > img_0_cols_V_channel_U_ap_dummy_ce;
    sc_signal< sc_lv<12> > img_0_cols_V_channel_din;
    sc_signal< sc_logic > img_0_cols_V_channel_write;
    sc_signal< sc_lv<12> > img_0_cols_V_channel_dout;
    sc_signal< sc_logic > img_0_cols_V_channel_empty_n;
    sc_signal< sc_logic > img_0_cols_V_channel_read;
    sc_signal< sc_logic > img_0_cols_V_channel1_U_ap_dummy_ce;
    sc_signal< sc_lv<12> > img_0_cols_V_channel1_din;
    sc_signal< sc_logic > img_0_cols_V_channel1_write;
    sc_signal< sc_lv<12> > img_0_cols_V_channel1_dout;
    sc_signal< sc_logic > img_0_cols_V_channel1_empty_n;
    sc_signal< sc_logic > img_0_cols_V_channel1_read;
    sc_signal< sc_logic > img_1_rows_V_U_ap_dummy_ce;
    sc_signal< sc_lv<12> > img_1_rows_V_din;
    sc_signal< sc_logic > img_1_rows_V_write;
    sc_signal< sc_lv<12> > img_1_rows_V_dout;
    sc_signal< sc_logic > img_1_rows_V_empty_n;
    sc_signal< sc_logic > img_1_rows_V_read;
    sc_signal< sc_logic > img_1_cols_V_U_ap_dummy_ce;
    sc_signal< sc_lv<12> > img_1_cols_V_din;
    sc_signal< sc_logic > img_1_cols_V_write;
    sc_signal< sc_lv<12> > img_1_cols_V_dout;
    sc_signal< sc_logic > img_1_cols_V_empty_n;
    sc_signal< sc_logic > img_1_cols_V_read;
    sc_signal< sc_logic > img_0_data_stream_0_V_U_ap_dummy_ce;
    sc_signal< sc_lv<8> > img_0_data_stream_0_V_din;
    sc_signal< sc_logic > img_0_data_stream_0_V_full_n;
    sc_signal< sc_logic > img_0_data_stream_0_V_write;
    sc_signal< sc_lv<8> > img_0_data_stream_0_V_dout;
    sc_signal< sc_logic > img_0_data_stream_0_V_empty_n;
    sc_signal< sc_logic > img_0_data_stream_0_V_read;
    sc_signal< sc_logic > img_0_data_stream_1_V_U_ap_dummy_ce;
    sc_signal< sc_lv<8> > img_0_data_stream_1_V_din;
    sc_signal< sc_logic > img_0_data_stream_1_V_full_n;
    sc_signal< sc_logic > img_0_data_stream_1_V_write;
    sc_signal< sc_lv<8> > img_0_data_stream_1_V_dout;
    sc_signal< sc_logic > img_0_data_stream_1_V_empty_n;
    sc_signal< sc_logic > img_0_data_stream_1_V_read;
    sc_signal< sc_logic > img_0_data_stream_2_V_U_ap_dummy_ce;
    sc_signal< sc_lv<8> > img_0_data_stream_2_V_din;
    sc_signal< sc_logic > img_0_data_stream_2_V_full_n;
    sc_signal< sc_logic > img_0_data_stream_2_V_write;
    sc_signal< sc_lv<8> > img_0_data_stream_2_V_dout;
    sc_signal< sc_logic > img_0_data_stream_2_V_empty_n;
    sc_signal< sc_logic > img_0_data_stream_2_V_read;
    sc_signal< sc_logic > img_1_data_stream_0_V_U_ap_dummy_ce;
    sc_signal< sc_lv<8> > img_1_data_stream_0_V_din;
    sc_signal< sc_logic > img_1_data_stream_0_V_full_n;
    sc_signal< sc_logic > img_1_data_stream_0_V_write;
    sc_signal< sc_lv<8> > img_1_data_stream_0_V_dout;
    sc_signal< sc_logic > img_1_data_stream_0_V_empty_n;
    sc_signal< sc_logic > img_1_data_stream_0_V_read;
    sc_signal< sc_logic > img_1_data_stream_1_V_U_ap_dummy_ce;
    sc_signal< sc_lv<8> > img_1_data_stream_1_V_din;
    sc_signal< sc_logic > img_1_data_stream_1_V_full_n;
    sc_signal< sc_logic > img_1_data_stream_1_V_write;
    sc_signal< sc_lv<8> > img_1_data_stream_1_V_dout;
    sc_signal< sc_logic > img_1_data_stream_1_V_empty_n;
    sc_signal< sc_logic > img_1_data_stream_1_V_read;
    sc_signal< sc_logic > img_1_data_stream_2_V_U_ap_dummy_ce;
    sc_signal< sc_lv<8> > img_1_data_stream_2_V_din;
    sc_signal< sc_logic > img_1_data_stream_2_V_full_n;
    sc_signal< sc_logic > img_1_data_stream_2_V_write;
    sc_signal< sc_lv<8> > img_1_data_stream_2_V_dout;
    sc_signal< sc_logic > img_1_data_stream_2_V_empty_n;
    sc_signal< sc_logic > img_1_data_stream_2_V_read;
    sc_signal< sc_logic > ap_reg_procdone_sobel_Block_proc_U0;
    sc_signal< sc_logic > ap_sig_hs_done;
    sc_signal< sc_logic > ap_reg_procdone_sobel_AXIvideo2Mat_U0;
    sc_signal< sc_logic > ap_reg_procdone_sobel_Sobel_U0;
    sc_signal< sc_logic > ap_reg_procdone_sobel_Mat2AXIvideo_U0;
    sc_signal< sc_logic > ap_CS;
    sc_signal< sc_logic > ap_sig_top_allready;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const bool ap_true;
    static const sc_logic ap_const_logic_0;
    static const sc_logic ap_const_logic_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_INPUT_STREAM_TREADY();
    void thread_OUTPUT_STREAM_TDATA();
    void thread_OUTPUT_STREAM_TDEST();
    void thread_OUTPUT_STREAM_TID();
    void thread_OUTPUT_STREAM_TKEEP();
    void thread_OUTPUT_STREAM_TLAST();
    void thread_OUTPUT_STREAM_TSTRB();
    void thread_OUTPUT_STREAM_TUSER();
    void thread_OUTPUT_STREAM_TVALID();
    void thread_ap_chn_write_sobel_Block_proc_U0_img_0_cols_V_channel();
    void thread_ap_chn_write_sobel_Block_proc_U0_img_0_cols_V_channel1();
    void thread_ap_chn_write_sobel_Block_proc_U0_img_0_rows_V_channel();
    void thread_ap_chn_write_sobel_Block_proc_U0_img_0_rows_V_channel1();
    void thread_ap_chn_write_sobel_Block_proc_U0_img_1_cols_V();
    void thread_ap_chn_write_sobel_Block_proc_U0_img_1_rows_V();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_rst_n_inv();
    void thread_ap_sig_hs_continue();
    void thread_ap_sig_hs_done();
    void thread_ap_sig_ready_img_0_cols_V_channel1_full_n();
    void thread_ap_sig_ready_img_0_cols_V_channel_full_n();
    void thread_ap_sig_ready_img_0_rows_V_channel1_full_n();
    void thread_ap_sig_ready_img_0_rows_V_channel_full_n();
    void thread_ap_sig_ready_img_1_cols_V_full_n();
    void thread_ap_sig_ready_img_1_rows_V_full_n();
    void thread_ap_sig_top_allready();
    void thread_img_0_cols_V_channel1_U_ap_dummy_ce();
    void thread_img_0_cols_V_channel1_din();
    void thread_img_0_cols_V_channel1_read();
    void thread_img_0_cols_V_channel1_write();
    void thread_img_0_cols_V_channel_U_ap_dummy_ce();
    void thread_img_0_cols_V_channel_din();
    void thread_img_0_cols_V_channel_read();
    void thread_img_0_cols_V_channel_write();
    void thread_img_0_data_stream_0_V_U_ap_dummy_ce();
    void thread_img_0_data_stream_0_V_din();
    void thread_img_0_data_stream_0_V_read();
    void thread_img_0_data_stream_0_V_write();
    void thread_img_0_data_stream_1_V_U_ap_dummy_ce();
    void thread_img_0_data_stream_1_V_din();
    void thread_img_0_data_stream_1_V_read();
    void thread_img_0_data_stream_1_V_write();
    void thread_img_0_data_stream_2_V_U_ap_dummy_ce();
    void thread_img_0_data_stream_2_V_din();
    void thread_img_0_data_stream_2_V_read();
    void thread_img_0_data_stream_2_V_write();
    void thread_img_0_rows_V_channel1_U_ap_dummy_ce();
    void thread_img_0_rows_V_channel1_din();
    void thread_img_0_rows_V_channel1_read();
    void thread_img_0_rows_V_channel1_write();
    void thread_img_0_rows_V_channel_U_ap_dummy_ce();
    void thread_img_0_rows_V_channel_din();
    void thread_img_0_rows_V_channel_read();
    void thread_img_0_rows_V_channel_write();
    void thread_img_1_cols_V_U_ap_dummy_ce();
    void thread_img_1_cols_V_din();
    void thread_img_1_cols_V_read();
    void thread_img_1_cols_V_write();
    void thread_img_1_data_stream_0_V_U_ap_dummy_ce();
    void thread_img_1_data_stream_0_V_din();
    void thread_img_1_data_stream_0_V_read();
    void thread_img_1_data_stream_0_V_write();
    void thread_img_1_data_stream_1_V_U_ap_dummy_ce();
    void thread_img_1_data_stream_1_V_din();
    void thread_img_1_data_stream_1_V_read();
    void thread_img_1_data_stream_1_V_write();
    void thread_img_1_data_stream_2_V_U_ap_dummy_ce();
    void thread_img_1_data_stream_2_V_din();
    void thread_img_1_data_stream_2_V_read();
    void thread_img_1_data_stream_2_V_write();
    void thread_img_1_rows_V_U_ap_dummy_ce();
    void thread_img_1_rows_V_din();
    void thread_img_1_rows_V_read();
    void thread_img_1_rows_V_write();
    void thread_sobel_AXIvideo2Mat_U0_INPUT_STREAM_TDATA();
    void thread_sobel_AXIvideo2Mat_U0_INPUT_STREAM_TDEST();
    void thread_sobel_AXIvideo2Mat_U0_INPUT_STREAM_TID();
    void thread_sobel_AXIvideo2Mat_U0_INPUT_STREAM_TKEEP();
    void thread_sobel_AXIvideo2Mat_U0_INPUT_STREAM_TLAST();
    void thread_sobel_AXIvideo2Mat_U0_INPUT_STREAM_TSTRB();
    void thread_sobel_AXIvideo2Mat_U0_INPUT_STREAM_TUSER();
    void thread_sobel_AXIvideo2Mat_U0_INPUT_STREAM_TVALID();
    void thread_sobel_AXIvideo2Mat_U0_ap_continue();
    void thread_sobel_AXIvideo2Mat_U0_ap_start();
    void thread_sobel_AXIvideo2Mat_U0_img_cols_V_read();
    void thread_sobel_AXIvideo2Mat_U0_img_data_stream_0_V_full_n();
    void thread_sobel_AXIvideo2Mat_U0_img_data_stream_1_V_full_n();
    void thread_sobel_AXIvideo2Mat_U0_img_data_stream_2_V_full_n();
    void thread_sobel_AXIvideo2Mat_U0_img_rows_V_read();
    void thread_sobel_Block_proc_U0_ap_continue();
    void thread_sobel_Block_proc_U0_ap_start();
    void thread_sobel_Block_proc_U0_cols();
    void thread_sobel_Block_proc_U0_rows();
    void thread_sobel_Mat2AXIvideo_U0_OUTPUT_STREAM_TREADY();
    void thread_sobel_Mat2AXIvideo_U0_ap_continue();
    void thread_sobel_Mat2AXIvideo_U0_ap_start();
    void thread_sobel_Mat2AXIvideo_U0_img_cols_V_read();
    void thread_sobel_Mat2AXIvideo_U0_img_data_stream_0_V_dout();
    void thread_sobel_Mat2AXIvideo_U0_img_data_stream_0_V_empty_n();
    void thread_sobel_Mat2AXIvideo_U0_img_data_stream_1_V_dout();
    void thread_sobel_Mat2AXIvideo_U0_img_data_stream_1_V_empty_n();
    void thread_sobel_Mat2AXIvideo_U0_img_data_stream_2_V_dout();
    void thread_sobel_Mat2AXIvideo_U0_img_data_stream_2_V_empty_n();
    void thread_sobel_Mat2AXIvideo_U0_img_rows_V_read();
    void thread_sobel_Sobel_U0_ap_continue();
    void thread_sobel_Sobel_U0_ap_start();
    void thread_sobel_Sobel_U0_p_dst_data_stream_0_V_full_n();
    void thread_sobel_Sobel_U0_p_dst_data_stream_1_V_full_n();
    void thread_sobel_Sobel_U0_p_dst_data_stream_2_V_full_n();
    void thread_sobel_Sobel_U0_p_src_cols_V_read();
    void thread_sobel_Sobel_U0_p_src_data_stream_0_V_dout();
    void thread_sobel_Sobel_U0_p_src_data_stream_0_V_empty_n();
    void thread_sobel_Sobel_U0_p_src_data_stream_1_V_dout();
    void thread_sobel_Sobel_U0_p_src_data_stream_1_V_empty_n();
    void thread_sobel_Sobel_U0_p_src_data_stream_2_V_dout();
    void thread_sobel_Sobel_U0_p_src_data_stream_2_V_empty_n();
    void thread_sobel_Sobel_U0_p_src_rows_V_read();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
