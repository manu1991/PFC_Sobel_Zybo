// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2014.4
// Copyright (C) 2014 Xilinx Inc. All rights reserved.
// 
// ===========================================================

#include "sobel.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_lv<32> sobel::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<4> sobel::ap_const_lv4_0 = "0000";
const sc_lv<1> sobel::ap_const_lv1_0 = "0";
const bool sobel::ap_true = true;
const sc_logic sobel::ap_const_logic_0 = sc_dt::Log_0;
const sc_logic sobel::ap_const_logic_1 = sc_dt::Log_1;

sobel::sobel(sc_module_name name) : sc_module(name), mVcdFile(0) {
    sobel_Block_proc_U0 = new sobel_Block_proc("sobel_Block_proc_U0");
    sobel_Block_proc_U0->ap_clk(ap_clk);
    sobel_Block_proc_U0->ap_rst(ap_rst_n_inv);
    sobel_Block_proc_U0->ap_start(sobel_Block_proc_U0_ap_start);
    sobel_Block_proc_U0->ap_done(sobel_Block_proc_U0_ap_done);
    sobel_Block_proc_U0->ap_continue(sobel_Block_proc_U0_ap_continue);
    sobel_Block_proc_U0->ap_idle(sobel_Block_proc_U0_ap_idle);
    sobel_Block_proc_U0->ap_ready(sobel_Block_proc_U0_ap_ready);
    sobel_Block_proc_U0->rows(sobel_Block_proc_U0_rows);
    sobel_Block_proc_U0->cols(sobel_Block_proc_U0_cols);
    sobel_Block_proc_U0->ap_return_0(sobel_Block_proc_U0_ap_return_0);
    sobel_Block_proc_U0->ap_return_1(sobel_Block_proc_U0_ap_return_1);
    sobel_Block_proc_U0->ap_return_2(sobel_Block_proc_U0_ap_return_2);
    sobel_Block_proc_U0->ap_return_3(sobel_Block_proc_U0_ap_return_3);
    sobel_Block_proc_U0->ap_return_4(sobel_Block_proc_U0_ap_return_4);
    sobel_Block_proc_U0->ap_return_5(sobel_Block_proc_U0_ap_return_5);
    sobel_AXIvideo2Mat_U0 = new sobel_AXIvideo2Mat("sobel_AXIvideo2Mat_U0");
    sobel_AXIvideo2Mat_U0->ap_clk(ap_clk);
    sobel_AXIvideo2Mat_U0->ap_rst(ap_rst_n_inv);
    sobel_AXIvideo2Mat_U0->ap_start(sobel_AXIvideo2Mat_U0_ap_start);
    sobel_AXIvideo2Mat_U0->ap_done(sobel_AXIvideo2Mat_U0_ap_done);
    sobel_AXIvideo2Mat_U0->ap_continue(sobel_AXIvideo2Mat_U0_ap_continue);
    sobel_AXIvideo2Mat_U0->ap_idle(sobel_AXIvideo2Mat_U0_ap_idle);
    sobel_AXIvideo2Mat_U0->ap_ready(sobel_AXIvideo2Mat_U0_ap_ready);
    sobel_AXIvideo2Mat_U0->INPUT_STREAM_TDATA(sobel_AXIvideo2Mat_U0_INPUT_STREAM_TDATA);
    sobel_AXIvideo2Mat_U0->INPUT_STREAM_TVALID(sobel_AXIvideo2Mat_U0_INPUT_STREAM_TVALID);
    sobel_AXIvideo2Mat_U0->INPUT_STREAM_TREADY(sobel_AXIvideo2Mat_U0_INPUT_STREAM_TREADY);
    sobel_AXIvideo2Mat_U0->INPUT_STREAM_TKEEP(sobel_AXIvideo2Mat_U0_INPUT_STREAM_TKEEP);
    sobel_AXIvideo2Mat_U0->INPUT_STREAM_TSTRB(sobel_AXIvideo2Mat_U0_INPUT_STREAM_TSTRB);
    sobel_AXIvideo2Mat_U0->INPUT_STREAM_TUSER(sobel_AXIvideo2Mat_U0_INPUT_STREAM_TUSER);
    sobel_AXIvideo2Mat_U0->INPUT_STREAM_TLAST(sobel_AXIvideo2Mat_U0_INPUT_STREAM_TLAST);
    sobel_AXIvideo2Mat_U0->INPUT_STREAM_TID(sobel_AXIvideo2Mat_U0_INPUT_STREAM_TID);
    sobel_AXIvideo2Mat_U0->INPUT_STREAM_TDEST(sobel_AXIvideo2Mat_U0_INPUT_STREAM_TDEST);
    sobel_AXIvideo2Mat_U0->img_rows_V_read(sobel_AXIvideo2Mat_U0_img_rows_V_read);
    sobel_AXIvideo2Mat_U0->img_cols_V_read(sobel_AXIvideo2Mat_U0_img_cols_V_read);
    sobel_AXIvideo2Mat_U0->img_data_stream_0_V_din(sobel_AXIvideo2Mat_U0_img_data_stream_0_V_din);
    sobel_AXIvideo2Mat_U0->img_data_stream_0_V_full_n(sobel_AXIvideo2Mat_U0_img_data_stream_0_V_full_n);
    sobel_AXIvideo2Mat_U0->img_data_stream_0_V_write(sobel_AXIvideo2Mat_U0_img_data_stream_0_V_write);
    sobel_AXIvideo2Mat_U0->img_data_stream_1_V_din(sobel_AXIvideo2Mat_U0_img_data_stream_1_V_din);
    sobel_AXIvideo2Mat_U0->img_data_stream_1_V_full_n(sobel_AXIvideo2Mat_U0_img_data_stream_1_V_full_n);
    sobel_AXIvideo2Mat_U0->img_data_stream_1_V_write(sobel_AXIvideo2Mat_U0_img_data_stream_1_V_write);
    sobel_AXIvideo2Mat_U0->img_data_stream_2_V_din(sobel_AXIvideo2Mat_U0_img_data_stream_2_V_din);
    sobel_AXIvideo2Mat_U0->img_data_stream_2_V_full_n(sobel_AXIvideo2Mat_U0_img_data_stream_2_V_full_n);
    sobel_AXIvideo2Mat_U0->img_data_stream_2_V_write(sobel_AXIvideo2Mat_U0_img_data_stream_2_V_write);
    sobel_Sobel_U0 = new sobel_Sobel("sobel_Sobel_U0");
    sobel_Sobel_U0->ap_clk(ap_clk);
    sobel_Sobel_U0->ap_rst(ap_rst_n_inv);
    sobel_Sobel_U0->ap_start(sobel_Sobel_U0_ap_start);
    sobel_Sobel_U0->ap_done(sobel_Sobel_U0_ap_done);
    sobel_Sobel_U0->ap_continue(sobel_Sobel_U0_ap_continue);
    sobel_Sobel_U0->ap_idle(sobel_Sobel_U0_ap_idle);
    sobel_Sobel_U0->ap_ready(sobel_Sobel_U0_ap_ready);
    sobel_Sobel_U0->p_src_rows_V_read(sobel_Sobel_U0_p_src_rows_V_read);
    sobel_Sobel_U0->p_src_cols_V_read(sobel_Sobel_U0_p_src_cols_V_read);
    sobel_Sobel_U0->p_src_data_stream_0_V_dout(sobel_Sobel_U0_p_src_data_stream_0_V_dout);
    sobel_Sobel_U0->p_src_data_stream_0_V_empty_n(sobel_Sobel_U0_p_src_data_stream_0_V_empty_n);
    sobel_Sobel_U0->p_src_data_stream_0_V_read(sobel_Sobel_U0_p_src_data_stream_0_V_read);
    sobel_Sobel_U0->p_src_data_stream_1_V_dout(sobel_Sobel_U0_p_src_data_stream_1_V_dout);
    sobel_Sobel_U0->p_src_data_stream_1_V_empty_n(sobel_Sobel_U0_p_src_data_stream_1_V_empty_n);
    sobel_Sobel_U0->p_src_data_stream_1_V_read(sobel_Sobel_U0_p_src_data_stream_1_V_read);
    sobel_Sobel_U0->p_src_data_stream_2_V_dout(sobel_Sobel_U0_p_src_data_stream_2_V_dout);
    sobel_Sobel_U0->p_src_data_stream_2_V_empty_n(sobel_Sobel_U0_p_src_data_stream_2_V_empty_n);
    sobel_Sobel_U0->p_src_data_stream_2_V_read(sobel_Sobel_U0_p_src_data_stream_2_V_read);
    sobel_Sobel_U0->p_dst_data_stream_0_V_din(sobel_Sobel_U0_p_dst_data_stream_0_V_din);
    sobel_Sobel_U0->p_dst_data_stream_0_V_full_n(sobel_Sobel_U0_p_dst_data_stream_0_V_full_n);
    sobel_Sobel_U0->p_dst_data_stream_0_V_write(sobel_Sobel_U0_p_dst_data_stream_0_V_write);
    sobel_Sobel_U0->p_dst_data_stream_1_V_din(sobel_Sobel_U0_p_dst_data_stream_1_V_din);
    sobel_Sobel_U0->p_dst_data_stream_1_V_full_n(sobel_Sobel_U0_p_dst_data_stream_1_V_full_n);
    sobel_Sobel_U0->p_dst_data_stream_1_V_write(sobel_Sobel_U0_p_dst_data_stream_1_V_write);
    sobel_Sobel_U0->p_dst_data_stream_2_V_din(sobel_Sobel_U0_p_dst_data_stream_2_V_din);
    sobel_Sobel_U0->p_dst_data_stream_2_V_full_n(sobel_Sobel_U0_p_dst_data_stream_2_V_full_n);
    sobel_Sobel_U0->p_dst_data_stream_2_V_write(sobel_Sobel_U0_p_dst_data_stream_2_V_write);
    sobel_Mat2AXIvideo_U0 = new sobel_Mat2AXIvideo("sobel_Mat2AXIvideo_U0");
    sobel_Mat2AXIvideo_U0->ap_clk(ap_clk);
    sobel_Mat2AXIvideo_U0->ap_rst(ap_rst_n_inv);
    sobel_Mat2AXIvideo_U0->ap_start(sobel_Mat2AXIvideo_U0_ap_start);
    sobel_Mat2AXIvideo_U0->ap_done(sobel_Mat2AXIvideo_U0_ap_done);
    sobel_Mat2AXIvideo_U0->ap_continue(sobel_Mat2AXIvideo_U0_ap_continue);
    sobel_Mat2AXIvideo_U0->ap_idle(sobel_Mat2AXIvideo_U0_ap_idle);
    sobel_Mat2AXIvideo_U0->ap_ready(sobel_Mat2AXIvideo_U0_ap_ready);
    sobel_Mat2AXIvideo_U0->img_rows_V_read(sobel_Mat2AXIvideo_U0_img_rows_V_read);
    sobel_Mat2AXIvideo_U0->img_cols_V_read(sobel_Mat2AXIvideo_U0_img_cols_V_read);
    sobel_Mat2AXIvideo_U0->img_data_stream_0_V_dout(sobel_Mat2AXIvideo_U0_img_data_stream_0_V_dout);
    sobel_Mat2AXIvideo_U0->img_data_stream_0_V_empty_n(sobel_Mat2AXIvideo_U0_img_data_stream_0_V_empty_n);
    sobel_Mat2AXIvideo_U0->img_data_stream_0_V_read(sobel_Mat2AXIvideo_U0_img_data_stream_0_V_read);
    sobel_Mat2AXIvideo_U0->img_data_stream_1_V_dout(sobel_Mat2AXIvideo_U0_img_data_stream_1_V_dout);
    sobel_Mat2AXIvideo_U0->img_data_stream_1_V_empty_n(sobel_Mat2AXIvideo_U0_img_data_stream_1_V_empty_n);
    sobel_Mat2AXIvideo_U0->img_data_stream_1_V_read(sobel_Mat2AXIvideo_U0_img_data_stream_1_V_read);
    sobel_Mat2AXIvideo_U0->img_data_stream_2_V_dout(sobel_Mat2AXIvideo_U0_img_data_stream_2_V_dout);
    sobel_Mat2AXIvideo_U0->img_data_stream_2_V_empty_n(sobel_Mat2AXIvideo_U0_img_data_stream_2_V_empty_n);
    sobel_Mat2AXIvideo_U0->img_data_stream_2_V_read(sobel_Mat2AXIvideo_U0_img_data_stream_2_V_read);
    sobel_Mat2AXIvideo_U0->OUTPUT_STREAM_TDATA(sobel_Mat2AXIvideo_U0_OUTPUT_STREAM_TDATA);
    sobel_Mat2AXIvideo_U0->OUTPUT_STREAM_TVALID(sobel_Mat2AXIvideo_U0_OUTPUT_STREAM_TVALID);
    sobel_Mat2AXIvideo_U0->OUTPUT_STREAM_TREADY(sobel_Mat2AXIvideo_U0_OUTPUT_STREAM_TREADY);
    sobel_Mat2AXIvideo_U0->OUTPUT_STREAM_TKEEP(sobel_Mat2AXIvideo_U0_OUTPUT_STREAM_TKEEP);
    sobel_Mat2AXIvideo_U0->OUTPUT_STREAM_TSTRB(sobel_Mat2AXIvideo_U0_OUTPUT_STREAM_TSTRB);
    sobel_Mat2AXIvideo_U0->OUTPUT_STREAM_TUSER(sobel_Mat2AXIvideo_U0_OUTPUT_STREAM_TUSER);
    sobel_Mat2AXIvideo_U0->OUTPUT_STREAM_TLAST(sobel_Mat2AXIvideo_U0_OUTPUT_STREAM_TLAST);
    sobel_Mat2AXIvideo_U0->OUTPUT_STREAM_TID(sobel_Mat2AXIvideo_U0_OUTPUT_STREAM_TID);
    sobel_Mat2AXIvideo_U0->OUTPUT_STREAM_TDEST(sobel_Mat2AXIvideo_U0_OUTPUT_STREAM_TDEST);
    img_0_rows_V_channel_U = new FIFO_sobel_img_0_rows_V_channel("img_0_rows_V_channel_U");
    img_0_rows_V_channel_U->clk(ap_clk);
    img_0_rows_V_channel_U->reset(ap_rst_n_inv);
    img_0_rows_V_channel_U->if_read_ce(img_0_rows_V_channel_U_ap_dummy_ce);
    img_0_rows_V_channel_U->if_write_ce(img_0_rows_V_channel_U_ap_dummy_ce);
    img_0_rows_V_channel_U->if_din(img_0_rows_V_channel_din);
    img_0_rows_V_channel_U->if_full_n(img_0_rows_V_channel_full_n);
    img_0_rows_V_channel_U->if_write(img_0_rows_V_channel_write);
    img_0_rows_V_channel_U->if_dout(img_0_rows_V_channel_dout);
    img_0_rows_V_channel_U->if_empty_n(img_0_rows_V_channel_empty_n);
    img_0_rows_V_channel_U->if_read(img_0_rows_V_channel_read);
    img_0_rows_V_channel1_U = new FIFO_sobel_img_0_rows_V_channel1("img_0_rows_V_channel1_U");
    img_0_rows_V_channel1_U->clk(ap_clk);
    img_0_rows_V_channel1_U->reset(ap_rst_n_inv);
    img_0_rows_V_channel1_U->if_read_ce(img_0_rows_V_channel1_U_ap_dummy_ce);
    img_0_rows_V_channel1_U->if_write_ce(img_0_rows_V_channel1_U_ap_dummy_ce);
    img_0_rows_V_channel1_U->if_din(img_0_rows_V_channel1_din);
    img_0_rows_V_channel1_U->if_full_n(img_0_rows_V_channel1_full_n);
    img_0_rows_V_channel1_U->if_write(img_0_rows_V_channel1_write);
    img_0_rows_V_channel1_U->if_dout(img_0_rows_V_channel1_dout);
    img_0_rows_V_channel1_U->if_empty_n(img_0_rows_V_channel1_empty_n);
    img_0_rows_V_channel1_U->if_read(img_0_rows_V_channel1_read);
    img_0_cols_V_channel_U = new FIFO_sobel_img_0_cols_V_channel("img_0_cols_V_channel_U");
    img_0_cols_V_channel_U->clk(ap_clk);
    img_0_cols_V_channel_U->reset(ap_rst_n_inv);
    img_0_cols_V_channel_U->if_read_ce(img_0_cols_V_channel_U_ap_dummy_ce);
    img_0_cols_V_channel_U->if_write_ce(img_0_cols_V_channel_U_ap_dummy_ce);
    img_0_cols_V_channel_U->if_din(img_0_cols_V_channel_din);
    img_0_cols_V_channel_U->if_full_n(img_0_cols_V_channel_full_n);
    img_0_cols_V_channel_U->if_write(img_0_cols_V_channel_write);
    img_0_cols_V_channel_U->if_dout(img_0_cols_V_channel_dout);
    img_0_cols_V_channel_U->if_empty_n(img_0_cols_V_channel_empty_n);
    img_0_cols_V_channel_U->if_read(img_0_cols_V_channel_read);
    img_0_cols_V_channel1_U = new FIFO_sobel_img_0_cols_V_channel1("img_0_cols_V_channel1_U");
    img_0_cols_V_channel1_U->clk(ap_clk);
    img_0_cols_V_channel1_U->reset(ap_rst_n_inv);
    img_0_cols_V_channel1_U->if_read_ce(img_0_cols_V_channel1_U_ap_dummy_ce);
    img_0_cols_V_channel1_U->if_write_ce(img_0_cols_V_channel1_U_ap_dummy_ce);
    img_0_cols_V_channel1_U->if_din(img_0_cols_V_channel1_din);
    img_0_cols_V_channel1_U->if_full_n(img_0_cols_V_channel1_full_n);
    img_0_cols_V_channel1_U->if_write(img_0_cols_V_channel1_write);
    img_0_cols_V_channel1_U->if_dout(img_0_cols_V_channel1_dout);
    img_0_cols_V_channel1_U->if_empty_n(img_0_cols_V_channel1_empty_n);
    img_0_cols_V_channel1_U->if_read(img_0_cols_V_channel1_read);
    img_1_rows_V_U = new FIFO_sobel_img_1_rows_V("img_1_rows_V_U");
    img_1_rows_V_U->clk(ap_clk);
    img_1_rows_V_U->reset(ap_rst_n_inv);
    img_1_rows_V_U->if_read_ce(img_1_rows_V_U_ap_dummy_ce);
    img_1_rows_V_U->if_write_ce(img_1_rows_V_U_ap_dummy_ce);
    img_1_rows_V_U->if_din(img_1_rows_V_din);
    img_1_rows_V_U->if_full_n(img_1_rows_V_full_n);
    img_1_rows_V_U->if_write(img_1_rows_V_write);
    img_1_rows_V_U->if_dout(img_1_rows_V_dout);
    img_1_rows_V_U->if_empty_n(img_1_rows_V_empty_n);
    img_1_rows_V_U->if_read(img_1_rows_V_read);
    img_1_cols_V_U = new FIFO_sobel_img_1_cols_V("img_1_cols_V_U");
    img_1_cols_V_U->clk(ap_clk);
    img_1_cols_V_U->reset(ap_rst_n_inv);
    img_1_cols_V_U->if_read_ce(img_1_cols_V_U_ap_dummy_ce);
    img_1_cols_V_U->if_write_ce(img_1_cols_V_U_ap_dummy_ce);
    img_1_cols_V_U->if_din(img_1_cols_V_din);
    img_1_cols_V_U->if_full_n(img_1_cols_V_full_n);
    img_1_cols_V_U->if_write(img_1_cols_V_write);
    img_1_cols_V_U->if_dout(img_1_cols_V_dout);
    img_1_cols_V_U->if_empty_n(img_1_cols_V_empty_n);
    img_1_cols_V_U->if_read(img_1_cols_V_read);
    img_0_data_stream_0_V_U = new FIFO_sobel_img_0_data_stream_0_V("img_0_data_stream_0_V_U");
    img_0_data_stream_0_V_U->clk(ap_clk);
    img_0_data_stream_0_V_U->reset(ap_rst_n_inv);
    img_0_data_stream_0_V_U->if_read_ce(img_0_data_stream_0_V_U_ap_dummy_ce);
    img_0_data_stream_0_V_U->if_write_ce(img_0_data_stream_0_V_U_ap_dummy_ce);
    img_0_data_stream_0_V_U->if_din(img_0_data_stream_0_V_din);
    img_0_data_stream_0_V_U->if_full_n(img_0_data_stream_0_V_full_n);
    img_0_data_stream_0_V_U->if_write(img_0_data_stream_0_V_write);
    img_0_data_stream_0_V_U->if_dout(img_0_data_stream_0_V_dout);
    img_0_data_stream_0_V_U->if_empty_n(img_0_data_stream_0_V_empty_n);
    img_0_data_stream_0_V_U->if_read(img_0_data_stream_0_V_read);
    img_0_data_stream_1_V_U = new FIFO_sobel_img_0_data_stream_1_V("img_0_data_stream_1_V_U");
    img_0_data_stream_1_V_U->clk(ap_clk);
    img_0_data_stream_1_V_U->reset(ap_rst_n_inv);
    img_0_data_stream_1_V_U->if_read_ce(img_0_data_stream_1_V_U_ap_dummy_ce);
    img_0_data_stream_1_V_U->if_write_ce(img_0_data_stream_1_V_U_ap_dummy_ce);
    img_0_data_stream_1_V_U->if_din(img_0_data_stream_1_V_din);
    img_0_data_stream_1_V_U->if_full_n(img_0_data_stream_1_V_full_n);
    img_0_data_stream_1_V_U->if_write(img_0_data_stream_1_V_write);
    img_0_data_stream_1_V_U->if_dout(img_0_data_stream_1_V_dout);
    img_0_data_stream_1_V_U->if_empty_n(img_0_data_stream_1_V_empty_n);
    img_0_data_stream_1_V_U->if_read(img_0_data_stream_1_V_read);
    img_0_data_stream_2_V_U = new FIFO_sobel_img_0_data_stream_2_V("img_0_data_stream_2_V_U");
    img_0_data_stream_2_V_U->clk(ap_clk);
    img_0_data_stream_2_V_U->reset(ap_rst_n_inv);
    img_0_data_stream_2_V_U->if_read_ce(img_0_data_stream_2_V_U_ap_dummy_ce);
    img_0_data_stream_2_V_U->if_write_ce(img_0_data_stream_2_V_U_ap_dummy_ce);
    img_0_data_stream_2_V_U->if_din(img_0_data_stream_2_V_din);
    img_0_data_stream_2_V_U->if_full_n(img_0_data_stream_2_V_full_n);
    img_0_data_stream_2_V_U->if_write(img_0_data_stream_2_V_write);
    img_0_data_stream_2_V_U->if_dout(img_0_data_stream_2_V_dout);
    img_0_data_stream_2_V_U->if_empty_n(img_0_data_stream_2_V_empty_n);
    img_0_data_stream_2_V_U->if_read(img_0_data_stream_2_V_read);
    img_1_data_stream_0_V_U = new FIFO_sobel_img_1_data_stream_0_V("img_1_data_stream_0_V_U");
    img_1_data_stream_0_V_U->clk(ap_clk);
    img_1_data_stream_0_V_U->reset(ap_rst_n_inv);
    img_1_data_stream_0_V_U->if_read_ce(img_1_data_stream_0_V_U_ap_dummy_ce);
    img_1_data_stream_0_V_U->if_write_ce(img_1_data_stream_0_V_U_ap_dummy_ce);
    img_1_data_stream_0_V_U->if_din(img_1_data_stream_0_V_din);
    img_1_data_stream_0_V_U->if_full_n(img_1_data_stream_0_V_full_n);
    img_1_data_stream_0_V_U->if_write(img_1_data_stream_0_V_write);
    img_1_data_stream_0_V_U->if_dout(img_1_data_stream_0_V_dout);
    img_1_data_stream_0_V_U->if_empty_n(img_1_data_stream_0_V_empty_n);
    img_1_data_stream_0_V_U->if_read(img_1_data_stream_0_V_read);
    img_1_data_stream_1_V_U = new FIFO_sobel_img_1_data_stream_1_V("img_1_data_stream_1_V_U");
    img_1_data_stream_1_V_U->clk(ap_clk);
    img_1_data_stream_1_V_U->reset(ap_rst_n_inv);
    img_1_data_stream_1_V_U->if_read_ce(img_1_data_stream_1_V_U_ap_dummy_ce);
    img_1_data_stream_1_V_U->if_write_ce(img_1_data_stream_1_V_U_ap_dummy_ce);
    img_1_data_stream_1_V_U->if_din(img_1_data_stream_1_V_din);
    img_1_data_stream_1_V_U->if_full_n(img_1_data_stream_1_V_full_n);
    img_1_data_stream_1_V_U->if_write(img_1_data_stream_1_V_write);
    img_1_data_stream_1_V_U->if_dout(img_1_data_stream_1_V_dout);
    img_1_data_stream_1_V_U->if_empty_n(img_1_data_stream_1_V_empty_n);
    img_1_data_stream_1_V_U->if_read(img_1_data_stream_1_V_read);
    img_1_data_stream_2_V_U = new FIFO_sobel_img_1_data_stream_2_V("img_1_data_stream_2_V_U");
    img_1_data_stream_2_V_U->clk(ap_clk);
    img_1_data_stream_2_V_U->reset(ap_rst_n_inv);
    img_1_data_stream_2_V_U->if_read_ce(img_1_data_stream_2_V_U_ap_dummy_ce);
    img_1_data_stream_2_V_U->if_write_ce(img_1_data_stream_2_V_U_ap_dummy_ce);
    img_1_data_stream_2_V_U->if_din(img_1_data_stream_2_V_din);
    img_1_data_stream_2_V_U->if_full_n(img_1_data_stream_2_V_full_n);
    img_1_data_stream_2_V_U->if_write(img_1_data_stream_2_V_write);
    img_1_data_stream_2_V_U->if_dout(img_1_data_stream_2_V_dout);
    img_1_data_stream_2_V_U->if_empty_n(img_1_data_stream_2_V_empty_n);
    img_1_data_stream_2_V_U->if_read(img_1_data_stream_2_V_read);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_INPUT_STREAM_TREADY);
    sensitive << ( sobel_AXIvideo2Mat_U0_INPUT_STREAM_TREADY );

    SC_METHOD(thread_OUTPUT_STREAM_TDATA);
    sensitive << ( sobel_Mat2AXIvideo_U0_OUTPUT_STREAM_TDATA );

    SC_METHOD(thread_OUTPUT_STREAM_TDEST);
    sensitive << ( sobel_Mat2AXIvideo_U0_OUTPUT_STREAM_TDEST );

    SC_METHOD(thread_OUTPUT_STREAM_TID);
    sensitive << ( sobel_Mat2AXIvideo_U0_OUTPUT_STREAM_TID );

    SC_METHOD(thread_OUTPUT_STREAM_TKEEP);
    sensitive << ( sobel_Mat2AXIvideo_U0_OUTPUT_STREAM_TKEEP );

    SC_METHOD(thread_OUTPUT_STREAM_TLAST);
    sensitive << ( sobel_Mat2AXIvideo_U0_OUTPUT_STREAM_TLAST );

    SC_METHOD(thread_OUTPUT_STREAM_TSTRB);
    sensitive << ( sobel_Mat2AXIvideo_U0_OUTPUT_STREAM_TSTRB );

    SC_METHOD(thread_OUTPUT_STREAM_TUSER);
    sensitive << ( sobel_Mat2AXIvideo_U0_OUTPUT_STREAM_TUSER );

    SC_METHOD(thread_OUTPUT_STREAM_TVALID);
    sensitive << ( sobel_Mat2AXIvideo_U0_OUTPUT_STREAM_TVALID );

    SC_METHOD(thread_ap_chn_write_sobel_Block_proc_U0_img_0_cols_V_channel);
    sensitive << ( sobel_Block_proc_U0_ap_done );
    sensitive << ( ap_reg_ready_img_0_cols_V_channel_full_n );

    SC_METHOD(thread_ap_chn_write_sobel_Block_proc_U0_img_0_cols_V_channel1);
    sensitive << ( sobel_Block_proc_U0_ap_done );
    sensitive << ( ap_reg_ready_img_0_cols_V_channel1_full_n );

    SC_METHOD(thread_ap_chn_write_sobel_Block_proc_U0_img_0_rows_V_channel);
    sensitive << ( sobel_Block_proc_U0_ap_done );
    sensitive << ( ap_reg_ready_img_0_rows_V_channel_full_n );

    SC_METHOD(thread_ap_chn_write_sobel_Block_proc_U0_img_0_rows_V_channel1);
    sensitive << ( sobel_Block_proc_U0_ap_done );
    sensitive << ( ap_reg_ready_img_0_rows_V_channel1_full_n );

    SC_METHOD(thread_ap_chn_write_sobel_Block_proc_U0_img_1_cols_V);
    sensitive << ( sobel_Block_proc_U0_ap_done );
    sensitive << ( ap_reg_ready_img_1_cols_V_full_n );

    SC_METHOD(thread_ap_chn_write_sobel_Block_proc_U0_img_1_rows_V);
    sensitive << ( sobel_Block_proc_U0_ap_done );
    sensitive << ( ap_reg_ready_img_1_rows_V_full_n );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_sig_hs_done );

    SC_METHOD(thread_ap_idle);
    sensitive << ( sobel_Block_proc_U0_ap_idle );
    sensitive << ( sobel_AXIvideo2Mat_U0_ap_idle );
    sensitive << ( sobel_Sobel_U0_ap_idle );
    sensitive << ( sobel_Mat2AXIvideo_U0_ap_idle );
    sensitive << ( img_0_rows_V_channel_empty_n );
    sensitive << ( img_0_rows_V_channel1_empty_n );
    sensitive << ( img_0_cols_V_channel_empty_n );
    sensitive << ( img_0_cols_V_channel1_empty_n );
    sensitive << ( img_1_rows_V_empty_n );
    sensitive << ( img_1_cols_V_empty_n );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_sig_top_allready );

    SC_METHOD(thread_ap_rst_n_inv);
    sensitive << ( ap_rst_n );

    SC_METHOD(thread_ap_sig_hs_continue);

    SC_METHOD(thread_ap_sig_hs_done);
    sensitive << ( sobel_Mat2AXIvideo_U0_ap_done );

    SC_METHOD(thread_ap_sig_ready_img_0_cols_V_channel1_full_n);
    sensitive << ( img_0_cols_V_channel1_full_n );
    sensitive << ( ap_reg_ready_img_0_cols_V_channel1_full_n );

    SC_METHOD(thread_ap_sig_ready_img_0_cols_V_channel_full_n);
    sensitive << ( img_0_cols_V_channel_full_n );
    sensitive << ( ap_reg_ready_img_0_cols_V_channel_full_n );

    SC_METHOD(thread_ap_sig_ready_img_0_rows_V_channel1_full_n);
    sensitive << ( img_0_rows_V_channel1_full_n );
    sensitive << ( ap_reg_ready_img_0_rows_V_channel1_full_n );

    SC_METHOD(thread_ap_sig_ready_img_0_rows_V_channel_full_n);
    sensitive << ( img_0_rows_V_channel_full_n );
    sensitive << ( ap_reg_ready_img_0_rows_V_channel_full_n );

    SC_METHOD(thread_ap_sig_ready_img_1_cols_V_full_n);
    sensitive << ( img_1_cols_V_full_n );
    sensitive << ( ap_reg_ready_img_1_cols_V_full_n );

    SC_METHOD(thread_ap_sig_ready_img_1_rows_V_full_n);
    sensitive << ( img_1_rows_V_full_n );
    sensitive << ( ap_reg_ready_img_1_rows_V_full_n );

    SC_METHOD(thread_ap_sig_top_allready);
    sensitive << ( sobel_AXIvideo2Mat_U0_ap_ready );

    SC_METHOD(thread_img_0_cols_V_channel1_U_ap_dummy_ce);

    SC_METHOD(thread_img_0_cols_V_channel1_din);
    sensitive << ( sobel_Block_proc_U0_ap_return_3 );

    SC_METHOD(thread_img_0_cols_V_channel1_read);
    sensitive << ( sobel_Sobel_U0_ap_ready );

    SC_METHOD(thread_img_0_cols_V_channel1_write);
    sensitive << ( ap_chn_write_sobel_Block_proc_U0_img_0_cols_V_channel1 );

    SC_METHOD(thread_img_0_cols_V_channel_U_ap_dummy_ce);

    SC_METHOD(thread_img_0_cols_V_channel_din);
    sensitive << ( sobel_Block_proc_U0_ap_return_2 );

    SC_METHOD(thread_img_0_cols_V_channel_read);
    sensitive << ( sobel_AXIvideo2Mat_U0_ap_ready );

    SC_METHOD(thread_img_0_cols_V_channel_write);
    sensitive << ( ap_chn_write_sobel_Block_proc_U0_img_0_cols_V_channel );

    SC_METHOD(thread_img_0_data_stream_0_V_U_ap_dummy_ce);

    SC_METHOD(thread_img_0_data_stream_0_V_din);
    sensitive << ( sobel_AXIvideo2Mat_U0_img_data_stream_0_V_din );

    SC_METHOD(thread_img_0_data_stream_0_V_read);
    sensitive << ( sobel_Sobel_U0_p_src_data_stream_0_V_read );

    SC_METHOD(thread_img_0_data_stream_0_V_write);
    sensitive << ( sobel_AXIvideo2Mat_U0_img_data_stream_0_V_write );

    SC_METHOD(thread_img_0_data_stream_1_V_U_ap_dummy_ce);

    SC_METHOD(thread_img_0_data_stream_1_V_din);
    sensitive << ( sobel_AXIvideo2Mat_U0_img_data_stream_1_V_din );

    SC_METHOD(thread_img_0_data_stream_1_V_read);
    sensitive << ( sobel_Sobel_U0_p_src_data_stream_1_V_read );

    SC_METHOD(thread_img_0_data_stream_1_V_write);
    sensitive << ( sobel_AXIvideo2Mat_U0_img_data_stream_1_V_write );

    SC_METHOD(thread_img_0_data_stream_2_V_U_ap_dummy_ce);

    SC_METHOD(thread_img_0_data_stream_2_V_din);
    sensitive << ( sobel_AXIvideo2Mat_U0_img_data_stream_2_V_din );

    SC_METHOD(thread_img_0_data_stream_2_V_read);
    sensitive << ( sobel_Sobel_U0_p_src_data_stream_2_V_read );

    SC_METHOD(thread_img_0_data_stream_2_V_write);
    sensitive << ( sobel_AXIvideo2Mat_U0_img_data_stream_2_V_write );

    SC_METHOD(thread_img_0_rows_V_channel1_U_ap_dummy_ce);

    SC_METHOD(thread_img_0_rows_V_channel1_din);
    sensitive << ( sobel_Block_proc_U0_ap_return_1 );

    SC_METHOD(thread_img_0_rows_V_channel1_read);
    sensitive << ( sobel_Sobel_U0_ap_ready );

    SC_METHOD(thread_img_0_rows_V_channel1_write);
    sensitive << ( ap_chn_write_sobel_Block_proc_U0_img_0_rows_V_channel1 );

    SC_METHOD(thread_img_0_rows_V_channel_U_ap_dummy_ce);

    SC_METHOD(thread_img_0_rows_V_channel_din);
    sensitive << ( sobel_Block_proc_U0_ap_return_0 );

    SC_METHOD(thread_img_0_rows_V_channel_read);
    sensitive << ( sobel_AXIvideo2Mat_U0_ap_ready );

    SC_METHOD(thread_img_0_rows_V_channel_write);
    sensitive << ( ap_chn_write_sobel_Block_proc_U0_img_0_rows_V_channel );

    SC_METHOD(thread_img_1_cols_V_U_ap_dummy_ce);

    SC_METHOD(thread_img_1_cols_V_din);
    sensitive << ( sobel_Block_proc_U0_ap_return_5 );

    SC_METHOD(thread_img_1_cols_V_read);
    sensitive << ( sobel_Mat2AXIvideo_U0_ap_ready );

    SC_METHOD(thread_img_1_cols_V_write);
    sensitive << ( ap_chn_write_sobel_Block_proc_U0_img_1_cols_V );

    SC_METHOD(thread_img_1_data_stream_0_V_U_ap_dummy_ce);

    SC_METHOD(thread_img_1_data_stream_0_V_din);
    sensitive << ( sobel_Sobel_U0_p_dst_data_stream_0_V_din );

    SC_METHOD(thread_img_1_data_stream_0_V_read);
    sensitive << ( sobel_Mat2AXIvideo_U0_img_data_stream_0_V_read );

    SC_METHOD(thread_img_1_data_stream_0_V_write);
    sensitive << ( sobel_Sobel_U0_p_dst_data_stream_0_V_write );

    SC_METHOD(thread_img_1_data_stream_1_V_U_ap_dummy_ce);

    SC_METHOD(thread_img_1_data_stream_1_V_din);
    sensitive << ( sobel_Sobel_U0_p_dst_data_stream_1_V_din );

    SC_METHOD(thread_img_1_data_stream_1_V_read);
    sensitive << ( sobel_Mat2AXIvideo_U0_img_data_stream_1_V_read );

    SC_METHOD(thread_img_1_data_stream_1_V_write);
    sensitive << ( sobel_Sobel_U0_p_dst_data_stream_1_V_write );

    SC_METHOD(thread_img_1_data_stream_2_V_U_ap_dummy_ce);

    SC_METHOD(thread_img_1_data_stream_2_V_din);
    sensitive << ( sobel_Sobel_U0_p_dst_data_stream_2_V_din );

    SC_METHOD(thread_img_1_data_stream_2_V_read);
    sensitive << ( sobel_Mat2AXIvideo_U0_img_data_stream_2_V_read );

    SC_METHOD(thread_img_1_data_stream_2_V_write);
    sensitive << ( sobel_Sobel_U0_p_dst_data_stream_2_V_write );

    SC_METHOD(thread_img_1_rows_V_U_ap_dummy_ce);

    SC_METHOD(thread_img_1_rows_V_din);
    sensitive << ( sobel_Block_proc_U0_ap_return_4 );

    SC_METHOD(thread_img_1_rows_V_read);
    sensitive << ( sobel_Mat2AXIvideo_U0_ap_ready );

    SC_METHOD(thread_img_1_rows_V_write);
    sensitive << ( ap_chn_write_sobel_Block_proc_U0_img_1_rows_V );

    SC_METHOD(thread_sobel_AXIvideo2Mat_U0_INPUT_STREAM_TDATA);
    sensitive << ( INPUT_STREAM_TDATA );

    SC_METHOD(thread_sobel_AXIvideo2Mat_U0_INPUT_STREAM_TDEST);
    sensitive << ( INPUT_STREAM_TDEST );

    SC_METHOD(thread_sobel_AXIvideo2Mat_U0_INPUT_STREAM_TID);
    sensitive << ( INPUT_STREAM_TID );

    SC_METHOD(thread_sobel_AXIvideo2Mat_U0_INPUT_STREAM_TKEEP);
    sensitive << ( INPUT_STREAM_TKEEP );

    SC_METHOD(thread_sobel_AXIvideo2Mat_U0_INPUT_STREAM_TLAST);
    sensitive << ( INPUT_STREAM_TLAST );

    SC_METHOD(thread_sobel_AXIvideo2Mat_U0_INPUT_STREAM_TSTRB);
    sensitive << ( INPUT_STREAM_TSTRB );

    SC_METHOD(thread_sobel_AXIvideo2Mat_U0_INPUT_STREAM_TUSER);
    sensitive << ( INPUT_STREAM_TUSER );

    SC_METHOD(thread_sobel_AXIvideo2Mat_U0_INPUT_STREAM_TVALID);
    sensitive << ( INPUT_STREAM_TVALID );

    SC_METHOD(thread_sobel_AXIvideo2Mat_U0_ap_continue);

    SC_METHOD(thread_sobel_AXIvideo2Mat_U0_ap_start);
    sensitive << ( ap_start );
    sensitive << ( img_0_rows_V_channel_empty_n );
    sensitive << ( img_0_cols_V_channel_empty_n );

    SC_METHOD(thread_sobel_AXIvideo2Mat_U0_img_cols_V_read);
    sensitive << ( img_0_cols_V_channel_dout );

    SC_METHOD(thread_sobel_AXIvideo2Mat_U0_img_data_stream_0_V_full_n);
    sensitive << ( img_0_data_stream_0_V_full_n );

    SC_METHOD(thread_sobel_AXIvideo2Mat_U0_img_data_stream_1_V_full_n);
    sensitive << ( img_0_data_stream_1_V_full_n );

    SC_METHOD(thread_sobel_AXIvideo2Mat_U0_img_data_stream_2_V_full_n);
    sensitive << ( img_0_data_stream_2_V_full_n );

    SC_METHOD(thread_sobel_AXIvideo2Mat_U0_img_rows_V_read);
    sensitive << ( img_0_rows_V_channel_dout );

    SC_METHOD(thread_sobel_Block_proc_U0_ap_continue);
    sensitive << ( ap_sig_ready_img_0_rows_V_channel_full_n );
    sensitive << ( ap_sig_ready_img_0_cols_V_channel_full_n );
    sensitive << ( ap_sig_ready_img_1_cols_V_full_n );
    sensitive << ( ap_sig_ready_img_1_rows_V_full_n );
    sensitive << ( ap_sig_ready_img_0_rows_V_channel1_full_n );
    sensitive << ( ap_sig_ready_img_0_cols_V_channel1_full_n );

    SC_METHOD(thread_sobel_Block_proc_U0_ap_start);
    sensitive << ( ap_start );

    SC_METHOD(thread_sobel_Block_proc_U0_cols);
    sensitive << ( cols );

    SC_METHOD(thread_sobel_Block_proc_U0_rows);
    sensitive << ( rows );

    SC_METHOD(thread_sobel_Mat2AXIvideo_U0_OUTPUT_STREAM_TREADY);
    sensitive << ( OUTPUT_STREAM_TREADY );

    SC_METHOD(thread_sobel_Mat2AXIvideo_U0_ap_continue);
    sensitive << ( ap_sig_hs_continue );

    SC_METHOD(thread_sobel_Mat2AXIvideo_U0_ap_start);
    sensitive << ( img_1_rows_V_empty_n );
    sensitive << ( img_1_cols_V_empty_n );

    SC_METHOD(thread_sobel_Mat2AXIvideo_U0_img_cols_V_read);
    sensitive << ( img_1_cols_V_dout );

    SC_METHOD(thread_sobel_Mat2AXIvideo_U0_img_data_stream_0_V_dout);
    sensitive << ( img_1_data_stream_0_V_dout );

    SC_METHOD(thread_sobel_Mat2AXIvideo_U0_img_data_stream_0_V_empty_n);
    sensitive << ( img_1_data_stream_0_V_empty_n );

    SC_METHOD(thread_sobel_Mat2AXIvideo_U0_img_data_stream_1_V_dout);
    sensitive << ( img_1_data_stream_1_V_dout );

    SC_METHOD(thread_sobel_Mat2AXIvideo_U0_img_data_stream_1_V_empty_n);
    sensitive << ( img_1_data_stream_1_V_empty_n );

    SC_METHOD(thread_sobel_Mat2AXIvideo_U0_img_data_stream_2_V_dout);
    sensitive << ( img_1_data_stream_2_V_dout );

    SC_METHOD(thread_sobel_Mat2AXIvideo_U0_img_data_stream_2_V_empty_n);
    sensitive << ( img_1_data_stream_2_V_empty_n );

    SC_METHOD(thread_sobel_Mat2AXIvideo_U0_img_rows_V_read);
    sensitive << ( img_1_rows_V_dout );

    SC_METHOD(thread_sobel_Sobel_U0_ap_continue);

    SC_METHOD(thread_sobel_Sobel_U0_ap_start);
    sensitive << ( img_0_rows_V_channel1_empty_n );
    sensitive << ( img_0_cols_V_channel1_empty_n );

    SC_METHOD(thread_sobel_Sobel_U0_p_dst_data_stream_0_V_full_n);
    sensitive << ( img_1_data_stream_0_V_full_n );

    SC_METHOD(thread_sobel_Sobel_U0_p_dst_data_stream_1_V_full_n);
    sensitive << ( img_1_data_stream_1_V_full_n );

    SC_METHOD(thread_sobel_Sobel_U0_p_dst_data_stream_2_V_full_n);
    sensitive << ( img_1_data_stream_2_V_full_n );

    SC_METHOD(thread_sobel_Sobel_U0_p_src_cols_V_read);
    sensitive << ( img_0_cols_V_channel1_dout );

    SC_METHOD(thread_sobel_Sobel_U0_p_src_data_stream_0_V_dout);
    sensitive << ( img_0_data_stream_0_V_dout );

    SC_METHOD(thread_sobel_Sobel_U0_p_src_data_stream_0_V_empty_n);
    sensitive << ( img_0_data_stream_0_V_empty_n );

    SC_METHOD(thread_sobel_Sobel_U0_p_src_data_stream_1_V_dout);
    sensitive << ( img_0_data_stream_1_V_dout );

    SC_METHOD(thread_sobel_Sobel_U0_p_src_data_stream_1_V_empty_n);
    sensitive << ( img_0_data_stream_1_V_empty_n );

    SC_METHOD(thread_sobel_Sobel_U0_p_src_data_stream_2_V_dout);
    sensitive << ( img_0_data_stream_2_V_dout );

    SC_METHOD(thread_sobel_Sobel_U0_p_src_data_stream_2_V_empty_n);
    sensitive << ( img_0_data_stream_2_V_empty_n );

    SC_METHOD(thread_sobel_Sobel_U0_p_src_rows_V_read);
    sensitive << ( img_0_rows_V_channel1_dout );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    ap_reg_ready_img_0_rows_V_channel_full_n = SC_LOGIC_0;
    ap_reg_ready_img_0_cols_V_channel_full_n = SC_LOGIC_0;
    ap_reg_ready_img_1_cols_V_full_n = SC_LOGIC_0;
    ap_reg_ready_img_1_rows_V_full_n = SC_LOGIC_0;
    ap_reg_ready_img_0_rows_V_channel1_full_n = SC_LOGIC_0;
    ap_reg_ready_img_0_cols_V_channel1_full_n = SC_LOGIC_0;
    ap_reg_procdone_sobel_Block_proc_U0 = SC_LOGIC_0;
    ap_reg_procdone_sobel_AXIvideo2Mat_U0 = SC_LOGIC_0;
    ap_reg_procdone_sobel_Sobel_U0 = SC_LOGIC_0;
    ap_reg_procdone_sobel_Mat2AXIvideo_U0 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "sobel_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, INPUT_STREAM_TDATA, "(port)INPUT_STREAM_TDATA");
    sc_trace(mVcdFile, INPUT_STREAM_TKEEP, "(port)INPUT_STREAM_TKEEP");
    sc_trace(mVcdFile, INPUT_STREAM_TSTRB, "(port)INPUT_STREAM_TSTRB");
    sc_trace(mVcdFile, INPUT_STREAM_TUSER, "(port)INPUT_STREAM_TUSER");
    sc_trace(mVcdFile, INPUT_STREAM_TLAST, "(port)INPUT_STREAM_TLAST");
    sc_trace(mVcdFile, INPUT_STREAM_TID, "(port)INPUT_STREAM_TID");
    sc_trace(mVcdFile, INPUT_STREAM_TDEST, "(port)INPUT_STREAM_TDEST");
    sc_trace(mVcdFile, OUTPUT_STREAM_TDATA, "(port)OUTPUT_STREAM_TDATA");
    sc_trace(mVcdFile, OUTPUT_STREAM_TKEEP, "(port)OUTPUT_STREAM_TKEEP");
    sc_trace(mVcdFile, OUTPUT_STREAM_TSTRB, "(port)OUTPUT_STREAM_TSTRB");
    sc_trace(mVcdFile, OUTPUT_STREAM_TUSER, "(port)OUTPUT_STREAM_TUSER");
    sc_trace(mVcdFile, OUTPUT_STREAM_TLAST, "(port)OUTPUT_STREAM_TLAST");
    sc_trace(mVcdFile, OUTPUT_STREAM_TID, "(port)OUTPUT_STREAM_TID");
    sc_trace(mVcdFile, OUTPUT_STREAM_TDEST, "(port)OUTPUT_STREAM_TDEST");
    sc_trace(mVcdFile, rows, "(port)rows");
    sc_trace(mVcdFile, cols, "(port)cols");
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst_n, "(port)ap_rst_n");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, INPUT_STREAM_TVALID, "(port)INPUT_STREAM_TVALID");
    sc_trace(mVcdFile, INPUT_STREAM_TREADY, "(port)INPUT_STREAM_TREADY");
    sc_trace(mVcdFile, OUTPUT_STREAM_TVALID, "(port)OUTPUT_STREAM_TVALID");
    sc_trace(mVcdFile, OUTPUT_STREAM_TREADY, "(port)OUTPUT_STREAM_TREADY");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_rst_n_inv, "ap_rst_n_inv");
    sc_trace(mVcdFile, sobel_Block_proc_U0_ap_start, "sobel_Block_proc_U0_ap_start");
    sc_trace(mVcdFile, sobel_Block_proc_U0_ap_done, "sobel_Block_proc_U0_ap_done");
    sc_trace(mVcdFile, sobel_Block_proc_U0_ap_continue, "sobel_Block_proc_U0_ap_continue");
    sc_trace(mVcdFile, sobel_Block_proc_U0_ap_idle, "sobel_Block_proc_U0_ap_idle");
    sc_trace(mVcdFile, sobel_Block_proc_U0_ap_ready, "sobel_Block_proc_U0_ap_ready");
    sc_trace(mVcdFile, sobel_Block_proc_U0_rows, "sobel_Block_proc_U0_rows");
    sc_trace(mVcdFile, sobel_Block_proc_U0_cols, "sobel_Block_proc_U0_cols");
    sc_trace(mVcdFile, sobel_Block_proc_U0_ap_return_0, "sobel_Block_proc_U0_ap_return_0");
    sc_trace(mVcdFile, sobel_Block_proc_U0_ap_return_1, "sobel_Block_proc_U0_ap_return_1");
    sc_trace(mVcdFile, sobel_Block_proc_U0_ap_return_2, "sobel_Block_proc_U0_ap_return_2");
    sc_trace(mVcdFile, sobel_Block_proc_U0_ap_return_3, "sobel_Block_proc_U0_ap_return_3");
    sc_trace(mVcdFile, sobel_Block_proc_U0_ap_return_4, "sobel_Block_proc_U0_ap_return_4");
    sc_trace(mVcdFile, sobel_Block_proc_U0_ap_return_5, "sobel_Block_proc_U0_ap_return_5");
    sc_trace(mVcdFile, ap_chn_write_sobel_Block_proc_U0_img_0_rows_V_channel, "ap_chn_write_sobel_Block_proc_U0_img_0_rows_V_channel");
    sc_trace(mVcdFile, img_0_rows_V_channel_full_n, "img_0_rows_V_channel_full_n");
    sc_trace(mVcdFile, ap_reg_ready_img_0_rows_V_channel_full_n, "ap_reg_ready_img_0_rows_V_channel_full_n");
    sc_trace(mVcdFile, ap_sig_ready_img_0_rows_V_channel_full_n, "ap_sig_ready_img_0_rows_V_channel_full_n");
    sc_trace(mVcdFile, ap_chn_write_sobel_Block_proc_U0_img_0_cols_V_channel, "ap_chn_write_sobel_Block_proc_U0_img_0_cols_V_channel");
    sc_trace(mVcdFile, img_0_cols_V_channel_full_n, "img_0_cols_V_channel_full_n");
    sc_trace(mVcdFile, ap_reg_ready_img_0_cols_V_channel_full_n, "ap_reg_ready_img_0_cols_V_channel_full_n");
    sc_trace(mVcdFile, ap_sig_ready_img_0_cols_V_channel_full_n, "ap_sig_ready_img_0_cols_V_channel_full_n");
    sc_trace(mVcdFile, ap_chn_write_sobel_Block_proc_U0_img_1_cols_V, "ap_chn_write_sobel_Block_proc_U0_img_1_cols_V");
    sc_trace(mVcdFile, img_1_cols_V_full_n, "img_1_cols_V_full_n");
    sc_trace(mVcdFile, ap_reg_ready_img_1_cols_V_full_n, "ap_reg_ready_img_1_cols_V_full_n");
    sc_trace(mVcdFile, ap_sig_ready_img_1_cols_V_full_n, "ap_sig_ready_img_1_cols_V_full_n");
    sc_trace(mVcdFile, ap_chn_write_sobel_Block_proc_U0_img_1_rows_V, "ap_chn_write_sobel_Block_proc_U0_img_1_rows_V");
    sc_trace(mVcdFile, img_1_rows_V_full_n, "img_1_rows_V_full_n");
    sc_trace(mVcdFile, ap_reg_ready_img_1_rows_V_full_n, "ap_reg_ready_img_1_rows_V_full_n");
    sc_trace(mVcdFile, ap_sig_ready_img_1_rows_V_full_n, "ap_sig_ready_img_1_rows_V_full_n");
    sc_trace(mVcdFile, ap_chn_write_sobel_Block_proc_U0_img_0_rows_V_channel1, "ap_chn_write_sobel_Block_proc_U0_img_0_rows_V_channel1");
    sc_trace(mVcdFile, img_0_rows_V_channel1_full_n, "img_0_rows_V_channel1_full_n");
    sc_trace(mVcdFile, ap_reg_ready_img_0_rows_V_channel1_full_n, "ap_reg_ready_img_0_rows_V_channel1_full_n");
    sc_trace(mVcdFile, ap_sig_ready_img_0_rows_V_channel1_full_n, "ap_sig_ready_img_0_rows_V_channel1_full_n");
    sc_trace(mVcdFile, ap_chn_write_sobel_Block_proc_U0_img_0_cols_V_channel1, "ap_chn_write_sobel_Block_proc_U0_img_0_cols_V_channel1");
    sc_trace(mVcdFile, img_0_cols_V_channel1_full_n, "img_0_cols_V_channel1_full_n");
    sc_trace(mVcdFile, ap_reg_ready_img_0_cols_V_channel1_full_n, "ap_reg_ready_img_0_cols_V_channel1_full_n");
    sc_trace(mVcdFile, ap_sig_ready_img_0_cols_V_channel1_full_n, "ap_sig_ready_img_0_cols_V_channel1_full_n");
    sc_trace(mVcdFile, sobel_AXIvideo2Mat_U0_ap_start, "sobel_AXIvideo2Mat_U0_ap_start");
    sc_trace(mVcdFile, sobel_AXIvideo2Mat_U0_ap_done, "sobel_AXIvideo2Mat_U0_ap_done");
    sc_trace(mVcdFile, sobel_AXIvideo2Mat_U0_ap_continue, "sobel_AXIvideo2Mat_U0_ap_continue");
    sc_trace(mVcdFile, sobel_AXIvideo2Mat_U0_ap_idle, "sobel_AXIvideo2Mat_U0_ap_idle");
    sc_trace(mVcdFile, sobel_AXIvideo2Mat_U0_ap_ready, "sobel_AXIvideo2Mat_U0_ap_ready");
    sc_trace(mVcdFile, sobel_AXIvideo2Mat_U0_INPUT_STREAM_TDATA, "sobel_AXIvideo2Mat_U0_INPUT_STREAM_TDATA");
    sc_trace(mVcdFile, sobel_AXIvideo2Mat_U0_INPUT_STREAM_TVALID, "sobel_AXIvideo2Mat_U0_INPUT_STREAM_TVALID");
    sc_trace(mVcdFile, sobel_AXIvideo2Mat_U0_INPUT_STREAM_TREADY, "sobel_AXIvideo2Mat_U0_INPUT_STREAM_TREADY");
    sc_trace(mVcdFile, sobel_AXIvideo2Mat_U0_INPUT_STREAM_TKEEP, "sobel_AXIvideo2Mat_U0_INPUT_STREAM_TKEEP");
    sc_trace(mVcdFile, sobel_AXIvideo2Mat_U0_INPUT_STREAM_TSTRB, "sobel_AXIvideo2Mat_U0_INPUT_STREAM_TSTRB");
    sc_trace(mVcdFile, sobel_AXIvideo2Mat_U0_INPUT_STREAM_TUSER, "sobel_AXIvideo2Mat_U0_INPUT_STREAM_TUSER");
    sc_trace(mVcdFile, sobel_AXIvideo2Mat_U0_INPUT_STREAM_TLAST, "sobel_AXIvideo2Mat_U0_INPUT_STREAM_TLAST");
    sc_trace(mVcdFile, sobel_AXIvideo2Mat_U0_INPUT_STREAM_TID, "sobel_AXIvideo2Mat_U0_INPUT_STREAM_TID");
    sc_trace(mVcdFile, sobel_AXIvideo2Mat_U0_INPUT_STREAM_TDEST, "sobel_AXIvideo2Mat_U0_INPUT_STREAM_TDEST");
    sc_trace(mVcdFile, sobel_AXIvideo2Mat_U0_img_rows_V_read, "sobel_AXIvideo2Mat_U0_img_rows_V_read");
    sc_trace(mVcdFile, sobel_AXIvideo2Mat_U0_img_cols_V_read, "sobel_AXIvideo2Mat_U0_img_cols_V_read");
    sc_trace(mVcdFile, sobel_AXIvideo2Mat_U0_img_data_stream_0_V_din, "sobel_AXIvideo2Mat_U0_img_data_stream_0_V_din");
    sc_trace(mVcdFile, sobel_AXIvideo2Mat_U0_img_data_stream_0_V_full_n, "sobel_AXIvideo2Mat_U0_img_data_stream_0_V_full_n");
    sc_trace(mVcdFile, sobel_AXIvideo2Mat_U0_img_data_stream_0_V_write, "sobel_AXIvideo2Mat_U0_img_data_stream_0_V_write");
    sc_trace(mVcdFile, sobel_AXIvideo2Mat_U0_img_data_stream_1_V_din, "sobel_AXIvideo2Mat_U0_img_data_stream_1_V_din");
    sc_trace(mVcdFile, sobel_AXIvideo2Mat_U0_img_data_stream_1_V_full_n, "sobel_AXIvideo2Mat_U0_img_data_stream_1_V_full_n");
    sc_trace(mVcdFile, sobel_AXIvideo2Mat_U0_img_data_stream_1_V_write, "sobel_AXIvideo2Mat_U0_img_data_stream_1_V_write");
    sc_trace(mVcdFile, sobel_AXIvideo2Mat_U0_img_data_stream_2_V_din, "sobel_AXIvideo2Mat_U0_img_data_stream_2_V_din");
    sc_trace(mVcdFile, sobel_AXIvideo2Mat_U0_img_data_stream_2_V_full_n, "sobel_AXIvideo2Mat_U0_img_data_stream_2_V_full_n");
    sc_trace(mVcdFile, sobel_AXIvideo2Mat_U0_img_data_stream_2_V_write, "sobel_AXIvideo2Mat_U0_img_data_stream_2_V_write");
    sc_trace(mVcdFile, sobel_Sobel_U0_ap_start, "sobel_Sobel_U0_ap_start");
    sc_trace(mVcdFile, sobel_Sobel_U0_ap_done, "sobel_Sobel_U0_ap_done");
    sc_trace(mVcdFile, sobel_Sobel_U0_ap_continue, "sobel_Sobel_U0_ap_continue");
    sc_trace(mVcdFile, sobel_Sobel_U0_ap_idle, "sobel_Sobel_U0_ap_idle");
    sc_trace(mVcdFile, sobel_Sobel_U0_ap_ready, "sobel_Sobel_U0_ap_ready");
    sc_trace(mVcdFile, sobel_Sobel_U0_p_src_rows_V_read, "sobel_Sobel_U0_p_src_rows_V_read");
    sc_trace(mVcdFile, sobel_Sobel_U0_p_src_cols_V_read, "sobel_Sobel_U0_p_src_cols_V_read");
    sc_trace(mVcdFile, sobel_Sobel_U0_p_src_data_stream_0_V_dout, "sobel_Sobel_U0_p_src_data_stream_0_V_dout");
    sc_trace(mVcdFile, sobel_Sobel_U0_p_src_data_stream_0_V_empty_n, "sobel_Sobel_U0_p_src_data_stream_0_V_empty_n");
    sc_trace(mVcdFile, sobel_Sobel_U0_p_src_data_stream_0_V_read, "sobel_Sobel_U0_p_src_data_stream_0_V_read");
    sc_trace(mVcdFile, sobel_Sobel_U0_p_src_data_stream_1_V_dout, "sobel_Sobel_U0_p_src_data_stream_1_V_dout");
    sc_trace(mVcdFile, sobel_Sobel_U0_p_src_data_stream_1_V_empty_n, "sobel_Sobel_U0_p_src_data_stream_1_V_empty_n");
    sc_trace(mVcdFile, sobel_Sobel_U0_p_src_data_stream_1_V_read, "sobel_Sobel_U0_p_src_data_stream_1_V_read");
    sc_trace(mVcdFile, sobel_Sobel_U0_p_src_data_stream_2_V_dout, "sobel_Sobel_U0_p_src_data_stream_2_V_dout");
    sc_trace(mVcdFile, sobel_Sobel_U0_p_src_data_stream_2_V_empty_n, "sobel_Sobel_U0_p_src_data_stream_2_V_empty_n");
    sc_trace(mVcdFile, sobel_Sobel_U0_p_src_data_stream_2_V_read, "sobel_Sobel_U0_p_src_data_stream_2_V_read");
    sc_trace(mVcdFile, sobel_Sobel_U0_p_dst_data_stream_0_V_din, "sobel_Sobel_U0_p_dst_data_stream_0_V_din");
    sc_trace(mVcdFile, sobel_Sobel_U0_p_dst_data_stream_0_V_full_n, "sobel_Sobel_U0_p_dst_data_stream_0_V_full_n");
    sc_trace(mVcdFile, sobel_Sobel_U0_p_dst_data_stream_0_V_write, "sobel_Sobel_U0_p_dst_data_stream_0_V_write");
    sc_trace(mVcdFile, sobel_Sobel_U0_p_dst_data_stream_1_V_din, "sobel_Sobel_U0_p_dst_data_stream_1_V_din");
    sc_trace(mVcdFile, sobel_Sobel_U0_p_dst_data_stream_1_V_full_n, "sobel_Sobel_U0_p_dst_data_stream_1_V_full_n");
    sc_trace(mVcdFile, sobel_Sobel_U0_p_dst_data_stream_1_V_write, "sobel_Sobel_U0_p_dst_data_stream_1_V_write");
    sc_trace(mVcdFile, sobel_Sobel_U0_p_dst_data_stream_2_V_din, "sobel_Sobel_U0_p_dst_data_stream_2_V_din");
    sc_trace(mVcdFile, sobel_Sobel_U0_p_dst_data_stream_2_V_full_n, "sobel_Sobel_U0_p_dst_data_stream_2_V_full_n");
    sc_trace(mVcdFile, sobel_Sobel_U0_p_dst_data_stream_2_V_write, "sobel_Sobel_U0_p_dst_data_stream_2_V_write");
    sc_trace(mVcdFile, sobel_Mat2AXIvideo_U0_ap_start, "sobel_Mat2AXIvideo_U0_ap_start");
    sc_trace(mVcdFile, sobel_Mat2AXIvideo_U0_ap_done, "sobel_Mat2AXIvideo_U0_ap_done");
    sc_trace(mVcdFile, sobel_Mat2AXIvideo_U0_ap_continue, "sobel_Mat2AXIvideo_U0_ap_continue");
    sc_trace(mVcdFile, sobel_Mat2AXIvideo_U0_ap_idle, "sobel_Mat2AXIvideo_U0_ap_idle");
    sc_trace(mVcdFile, sobel_Mat2AXIvideo_U0_ap_ready, "sobel_Mat2AXIvideo_U0_ap_ready");
    sc_trace(mVcdFile, sobel_Mat2AXIvideo_U0_img_rows_V_read, "sobel_Mat2AXIvideo_U0_img_rows_V_read");
    sc_trace(mVcdFile, sobel_Mat2AXIvideo_U0_img_cols_V_read, "sobel_Mat2AXIvideo_U0_img_cols_V_read");
    sc_trace(mVcdFile, sobel_Mat2AXIvideo_U0_img_data_stream_0_V_dout, "sobel_Mat2AXIvideo_U0_img_data_stream_0_V_dout");
    sc_trace(mVcdFile, sobel_Mat2AXIvideo_U0_img_data_stream_0_V_empty_n, "sobel_Mat2AXIvideo_U0_img_data_stream_0_V_empty_n");
    sc_trace(mVcdFile, sobel_Mat2AXIvideo_U0_img_data_stream_0_V_read, "sobel_Mat2AXIvideo_U0_img_data_stream_0_V_read");
    sc_trace(mVcdFile, sobel_Mat2AXIvideo_U0_img_data_stream_1_V_dout, "sobel_Mat2AXIvideo_U0_img_data_stream_1_V_dout");
    sc_trace(mVcdFile, sobel_Mat2AXIvideo_U0_img_data_stream_1_V_empty_n, "sobel_Mat2AXIvideo_U0_img_data_stream_1_V_empty_n");
    sc_trace(mVcdFile, sobel_Mat2AXIvideo_U0_img_data_stream_1_V_read, "sobel_Mat2AXIvideo_U0_img_data_stream_1_V_read");
    sc_trace(mVcdFile, sobel_Mat2AXIvideo_U0_img_data_stream_2_V_dout, "sobel_Mat2AXIvideo_U0_img_data_stream_2_V_dout");
    sc_trace(mVcdFile, sobel_Mat2AXIvideo_U0_img_data_stream_2_V_empty_n, "sobel_Mat2AXIvideo_U0_img_data_stream_2_V_empty_n");
    sc_trace(mVcdFile, sobel_Mat2AXIvideo_U0_img_data_stream_2_V_read, "sobel_Mat2AXIvideo_U0_img_data_stream_2_V_read");
    sc_trace(mVcdFile, sobel_Mat2AXIvideo_U0_OUTPUT_STREAM_TDATA, "sobel_Mat2AXIvideo_U0_OUTPUT_STREAM_TDATA");
    sc_trace(mVcdFile, sobel_Mat2AXIvideo_U0_OUTPUT_STREAM_TVALID, "sobel_Mat2AXIvideo_U0_OUTPUT_STREAM_TVALID");
    sc_trace(mVcdFile, sobel_Mat2AXIvideo_U0_OUTPUT_STREAM_TREADY, "sobel_Mat2AXIvideo_U0_OUTPUT_STREAM_TREADY");
    sc_trace(mVcdFile, sobel_Mat2AXIvideo_U0_OUTPUT_STREAM_TKEEP, "sobel_Mat2AXIvideo_U0_OUTPUT_STREAM_TKEEP");
    sc_trace(mVcdFile, sobel_Mat2AXIvideo_U0_OUTPUT_STREAM_TSTRB, "sobel_Mat2AXIvideo_U0_OUTPUT_STREAM_TSTRB");
    sc_trace(mVcdFile, sobel_Mat2AXIvideo_U0_OUTPUT_STREAM_TUSER, "sobel_Mat2AXIvideo_U0_OUTPUT_STREAM_TUSER");
    sc_trace(mVcdFile, sobel_Mat2AXIvideo_U0_OUTPUT_STREAM_TLAST, "sobel_Mat2AXIvideo_U0_OUTPUT_STREAM_TLAST");
    sc_trace(mVcdFile, sobel_Mat2AXIvideo_U0_OUTPUT_STREAM_TID, "sobel_Mat2AXIvideo_U0_OUTPUT_STREAM_TID");
    sc_trace(mVcdFile, sobel_Mat2AXIvideo_U0_OUTPUT_STREAM_TDEST, "sobel_Mat2AXIvideo_U0_OUTPUT_STREAM_TDEST");
    sc_trace(mVcdFile, ap_sig_hs_continue, "ap_sig_hs_continue");
    sc_trace(mVcdFile, img_0_rows_V_channel_U_ap_dummy_ce, "img_0_rows_V_channel_U_ap_dummy_ce");
    sc_trace(mVcdFile, img_0_rows_V_channel_din, "img_0_rows_V_channel_din");
    sc_trace(mVcdFile, img_0_rows_V_channel_write, "img_0_rows_V_channel_write");
    sc_trace(mVcdFile, img_0_rows_V_channel_dout, "img_0_rows_V_channel_dout");
    sc_trace(mVcdFile, img_0_rows_V_channel_empty_n, "img_0_rows_V_channel_empty_n");
    sc_trace(mVcdFile, img_0_rows_V_channel_read, "img_0_rows_V_channel_read");
    sc_trace(mVcdFile, img_0_rows_V_channel1_U_ap_dummy_ce, "img_0_rows_V_channel1_U_ap_dummy_ce");
    sc_trace(mVcdFile, img_0_rows_V_channel1_din, "img_0_rows_V_channel1_din");
    sc_trace(mVcdFile, img_0_rows_V_channel1_write, "img_0_rows_V_channel1_write");
    sc_trace(mVcdFile, img_0_rows_V_channel1_dout, "img_0_rows_V_channel1_dout");
    sc_trace(mVcdFile, img_0_rows_V_channel1_empty_n, "img_0_rows_V_channel1_empty_n");
    sc_trace(mVcdFile, img_0_rows_V_channel1_read, "img_0_rows_V_channel1_read");
    sc_trace(mVcdFile, img_0_cols_V_channel_U_ap_dummy_ce, "img_0_cols_V_channel_U_ap_dummy_ce");
    sc_trace(mVcdFile, img_0_cols_V_channel_din, "img_0_cols_V_channel_din");
    sc_trace(mVcdFile, img_0_cols_V_channel_write, "img_0_cols_V_channel_write");
    sc_trace(mVcdFile, img_0_cols_V_channel_dout, "img_0_cols_V_channel_dout");
    sc_trace(mVcdFile, img_0_cols_V_channel_empty_n, "img_0_cols_V_channel_empty_n");
    sc_trace(mVcdFile, img_0_cols_V_channel_read, "img_0_cols_V_channel_read");
    sc_trace(mVcdFile, img_0_cols_V_channel1_U_ap_dummy_ce, "img_0_cols_V_channel1_U_ap_dummy_ce");
    sc_trace(mVcdFile, img_0_cols_V_channel1_din, "img_0_cols_V_channel1_din");
    sc_trace(mVcdFile, img_0_cols_V_channel1_write, "img_0_cols_V_channel1_write");
    sc_trace(mVcdFile, img_0_cols_V_channel1_dout, "img_0_cols_V_channel1_dout");
    sc_trace(mVcdFile, img_0_cols_V_channel1_empty_n, "img_0_cols_V_channel1_empty_n");
    sc_trace(mVcdFile, img_0_cols_V_channel1_read, "img_0_cols_V_channel1_read");
    sc_trace(mVcdFile, img_1_rows_V_U_ap_dummy_ce, "img_1_rows_V_U_ap_dummy_ce");
    sc_trace(mVcdFile, img_1_rows_V_din, "img_1_rows_V_din");
    sc_trace(mVcdFile, img_1_rows_V_write, "img_1_rows_V_write");
    sc_trace(mVcdFile, img_1_rows_V_dout, "img_1_rows_V_dout");
    sc_trace(mVcdFile, img_1_rows_V_empty_n, "img_1_rows_V_empty_n");
    sc_trace(mVcdFile, img_1_rows_V_read, "img_1_rows_V_read");
    sc_trace(mVcdFile, img_1_cols_V_U_ap_dummy_ce, "img_1_cols_V_U_ap_dummy_ce");
    sc_trace(mVcdFile, img_1_cols_V_din, "img_1_cols_V_din");
    sc_trace(mVcdFile, img_1_cols_V_write, "img_1_cols_V_write");
    sc_trace(mVcdFile, img_1_cols_V_dout, "img_1_cols_V_dout");
    sc_trace(mVcdFile, img_1_cols_V_empty_n, "img_1_cols_V_empty_n");
    sc_trace(mVcdFile, img_1_cols_V_read, "img_1_cols_V_read");
    sc_trace(mVcdFile, img_0_data_stream_0_V_U_ap_dummy_ce, "img_0_data_stream_0_V_U_ap_dummy_ce");
    sc_trace(mVcdFile, img_0_data_stream_0_V_din, "img_0_data_stream_0_V_din");
    sc_trace(mVcdFile, img_0_data_stream_0_V_full_n, "img_0_data_stream_0_V_full_n");
    sc_trace(mVcdFile, img_0_data_stream_0_V_write, "img_0_data_stream_0_V_write");
    sc_trace(mVcdFile, img_0_data_stream_0_V_dout, "img_0_data_stream_0_V_dout");
    sc_trace(mVcdFile, img_0_data_stream_0_V_empty_n, "img_0_data_stream_0_V_empty_n");
    sc_trace(mVcdFile, img_0_data_stream_0_V_read, "img_0_data_stream_0_V_read");
    sc_trace(mVcdFile, img_0_data_stream_1_V_U_ap_dummy_ce, "img_0_data_stream_1_V_U_ap_dummy_ce");
    sc_trace(mVcdFile, img_0_data_stream_1_V_din, "img_0_data_stream_1_V_din");
    sc_trace(mVcdFile, img_0_data_stream_1_V_full_n, "img_0_data_stream_1_V_full_n");
    sc_trace(mVcdFile, img_0_data_stream_1_V_write, "img_0_data_stream_1_V_write");
    sc_trace(mVcdFile, img_0_data_stream_1_V_dout, "img_0_data_stream_1_V_dout");
    sc_trace(mVcdFile, img_0_data_stream_1_V_empty_n, "img_0_data_stream_1_V_empty_n");
    sc_trace(mVcdFile, img_0_data_stream_1_V_read, "img_0_data_stream_1_V_read");
    sc_trace(mVcdFile, img_0_data_stream_2_V_U_ap_dummy_ce, "img_0_data_stream_2_V_U_ap_dummy_ce");
    sc_trace(mVcdFile, img_0_data_stream_2_V_din, "img_0_data_stream_2_V_din");
    sc_trace(mVcdFile, img_0_data_stream_2_V_full_n, "img_0_data_stream_2_V_full_n");
    sc_trace(mVcdFile, img_0_data_stream_2_V_write, "img_0_data_stream_2_V_write");
    sc_trace(mVcdFile, img_0_data_stream_2_V_dout, "img_0_data_stream_2_V_dout");
    sc_trace(mVcdFile, img_0_data_stream_2_V_empty_n, "img_0_data_stream_2_V_empty_n");
    sc_trace(mVcdFile, img_0_data_stream_2_V_read, "img_0_data_stream_2_V_read");
    sc_trace(mVcdFile, img_1_data_stream_0_V_U_ap_dummy_ce, "img_1_data_stream_0_V_U_ap_dummy_ce");
    sc_trace(mVcdFile, img_1_data_stream_0_V_din, "img_1_data_stream_0_V_din");
    sc_trace(mVcdFile, img_1_data_stream_0_V_full_n, "img_1_data_stream_0_V_full_n");
    sc_trace(mVcdFile, img_1_data_stream_0_V_write, "img_1_data_stream_0_V_write");
    sc_trace(mVcdFile, img_1_data_stream_0_V_dout, "img_1_data_stream_0_V_dout");
    sc_trace(mVcdFile, img_1_data_stream_0_V_empty_n, "img_1_data_stream_0_V_empty_n");
    sc_trace(mVcdFile, img_1_data_stream_0_V_read, "img_1_data_stream_0_V_read");
    sc_trace(mVcdFile, img_1_data_stream_1_V_U_ap_dummy_ce, "img_1_data_stream_1_V_U_ap_dummy_ce");
    sc_trace(mVcdFile, img_1_data_stream_1_V_din, "img_1_data_stream_1_V_din");
    sc_trace(mVcdFile, img_1_data_stream_1_V_full_n, "img_1_data_stream_1_V_full_n");
    sc_trace(mVcdFile, img_1_data_stream_1_V_write, "img_1_data_stream_1_V_write");
    sc_trace(mVcdFile, img_1_data_stream_1_V_dout, "img_1_data_stream_1_V_dout");
    sc_trace(mVcdFile, img_1_data_stream_1_V_empty_n, "img_1_data_stream_1_V_empty_n");
    sc_trace(mVcdFile, img_1_data_stream_1_V_read, "img_1_data_stream_1_V_read");
    sc_trace(mVcdFile, img_1_data_stream_2_V_U_ap_dummy_ce, "img_1_data_stream_2_V_U_ap_dummy_ce");
    sc_trace(mVcdFile, img_1_data_stream_2_V_din, "img_1_data_stream_2_V_din");
    sc_trace(mVcdFile, img_1_data_stream_2_V_full_n, "img_1_data_stream_2_V_full_n");
    sc_trace(mVcdFile, img_1_data_stream_2_V_write, "img_1_data_stream_2_V_write");
    sc_trace(mVcdFile, img_1_data_stream_2_V_dout, "img_1_data_stream_2_V_dout");
    sc_trace(mVcdFile, img_1_data_stream_2_V_empty_n, "img_1_data_stream_2_V_empty_n");
    sc_trace(mVcdFile, img_1_data_stream_2_V_read, "img_1_data_stream_2_V_read");
    sc_trace(mVcdFile, ap_reg_procdone_sobel_Block_proc_U0, "ap_reg_procdone_sobel_Block_proc_U0");
    sc_trace(mVcdFile, ap_sig_hs_done, "ap_sig_hs_done");
    sc_trace(mVcdFile, ap_reg_procdone_sobel_AXIvideo2Mat_U0, "ap_reg_procdone_sobel_AXIvideo2Mat_U0");
    sc_trace(mVcdFile, ap_reg_procdone_sobel_Sobel_U0, "ap_reg_procdone_sobel_Sobel_U0");
    sc_trace(mVcdFile, ap_reg_procdone_sobel_Mat2AXIvideo_U0, "ap_reg_procdone_sobel_Mat2AXIvideo_U0");
    sc_trace(mVcdFile, ap_CS, "ap_CS");
    sc_trace(mVcdFile, ap_sig_top_allready, "ap_sig_top_allready");
#endif

    }
    mHdltvinHandle.open("sobel.hdltvin.dat");
    mHdltvoutHandle.open("sobel.hdltvout.dat");
}

sobel::~sobel() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete sobel_Block_proc_U0;
    delete sobel_AXIvideo2Mat_U0;
    delete sobel_Sobel_U0;
    delete sobel_Mat2AXIvideo_U0;
    delete img_0_rows_V_channel_U;
    delete img_0_rows_V_channel1_U;
    delete img_0_cols_V_channel_U;
    delete img_0_cols_V_channel1_U;
    delete img_1_rows_V_U;
    delete img_1_cols_V_U;
    delete img_0_data_stream_0_V_U;
    delete img_0_data_stream_1_V_U;
    delete img_0_data_stream_2_V_U;
    delete img_1_data_stream_0_V_U;
    delete img_1_data_stream_1_V_U;
    delete img_1_data_stream_2_V_U;
}

void sobel::thread_ap_clk_no_reset_() {
    ap_CS = ap_const_logic_0;
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_procdone_sobel_AXIvideo2Mat_U0 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_hs_done.read())) {
            ap_reg_procdone_sobel_AXIvideo2Mat_U0 = ap_const_logic_0;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, sobel_AXIvideo2Mat_U0_ap_done.read())) {
            ap_reg_procdone_sobel_AXIvideo2Mat_U0 = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_procdone_sobel_Block_proc_U0 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_hs_done.read())) {
            ap_reg_procdone_sobel_Block_proc_U0 = ap_const_logic_0;
        } else if (esl_seteq<1,1,1>(sobel_Block_proc_U0_ap_done.read(), ap_const_logic_1)) {
            ap_reg_procdone_sobel_Block_proc_U0 = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_procdone_sobel_Mat2AXIvideo_U0 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_hs_done.read())) {
            ap_reg_procdone_sobel_Mat2AXIvideo_U0 = ap_const_logic_0;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, sobel_Mat2AXIvideo_U0_ap_done.read())) {
            ap_reg_procdone_sobel_Mat2AXIvideo_U0 = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_procdone_sobel_Sobel_U0 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_hs_done.read())) {
            ap_reg_procdone_sobel_Sobel_U0 = ap_const_logic_0;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, sobel_Sobel_U0_ap_done.read())) {
            ap_reg_procdone_sobel_Sobel_U0 = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ready_img_0_cols_V_channel1_full_n = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(sobel_Block_proc_U0_ap_done.read(), ap_const_logic_1) && 
             esl_seteq<1,1,1>(sobel_Block_proc_U0_ap_continue.read(), ap_const_logic_1))) {
            ap_reg_ready_img_0_cols_V_channel1_full_n = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(sobel_Block_proc_U0_ap_done.read(), ap_const_logic_1) && 
                    esl_seteq<1,1,1>(ap_const_logic_1, img_0_cols_V_channel1_full_n.read()))) {
            ap_reg_ready_img_0_cols_V_channel1_full_n = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ready_img_0_cols_V_channel_full_n = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(sobel_Block_proc_U0_ap_done.read(), ap_const_logic_1) && 
             esl_seteq<1,1,1>(sobel_Block_proc_U0_ap_continue.read(), ap_const_logic_1))) {
            ap_reg_ready_img_0_cols_V_channel_full_n = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(sobel_Block_proc_U0_ap_done.read(), ap_const_logic_1) && 
                    esl_seteq<1,1,1>(ap_const_logic_1, img_0_cols_V_channel_full_n.read()))) {
            ap_reg_ready_img_0_cols_V_channel_full_n = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ready_img_0_rows_V_channel1_full_n = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(sobel_Block_proc_U0_ap_done.read(), ap_const_logic_1) && 
             esl_seteq<1,1,1>(sobel_Block_proc_U0_ap_continue.read(), ap_const_logic_1))) {
            ap_reg_ready_img_0_rows_V_channel1_full_n = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(sobel_Block_proc_U0_ap_done.read(), ap_const_logic_1) && 
                    esl_seteq<1,1,1>(ap_const_logic_1, img_0_rows_V_channel1_full_n.read()))) {
            ap_reg_ready_img_0_rows_V_channel1_full_n = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ready_img_0_rows_V_channel_full_n = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(sobel_Block_proc_U0_ap_done.read(), ap_const_logic_1) && 
             esl_seteq<1,1,1>(sobel_Block_proc_U0_ap_continue.read(), ap_const_logic_1))) {
            ap_reg_ready_img_0_rows_V_channel_full_n = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(sobel_Block_proc_U0_ap_done.read(), ap_const_logic_1) && 
                    esl_seteq<1,1,1>(img_0_rows_V_channel_full_n.read(), ap_const_logic_1))) {
            ap_reg_ready_img_0_rows_V_channel_full_n = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ready_img_1_cols_V_full_n = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(sobel_Block_proc_U0_ap_done.read(), ap_const_logic_1) && 
             esl_seteq<1,1,1>(sobel_Block_proc_U0_ap_continue.read(), ap_const_logic_1))) {
            ap_reg_ready_img_1_cols_V_full_n = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(sobel_Block_proc_U0_ap_done.read(), ap_const_logic_1) && 
                    esl_seteq<1,1,1>(ap_const_logic_1, img_1_cols_V_full_n.read()))) {
            ap_reg_ready_img_1_cols_V_full_n = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ready_img_1_rows_V_full_n = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(sobel_Block_proc_U0_ap_done.read(), ap_const_logic_1) && 
             esl_seteq<1,1,1>(sobel_Block_proc_U0_ap_continue.read(), ap_const_logic_1))) {
            ap_reg_ready_img_1_rows_V_full_n = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(sobel_Block_proc_U0_ap_done.read(), ap_const_logic_1) && 
                    esl_seteq<1,1,1>(ap_const_logic_1, img_1_rows_V_full_n.read()))) {
            ap_reg_ready_img_1_rows_V_full_n = ap_const_logic_1;
        }
    }
}

void sobel::thread_INPUT_STREAM_TREADY() {
    INPUT_STREAM_TREADY = sobel_AXIvideo2Mat_U0_INPUT_STREAM_TREADY.read();
}

void sobel::thread_OUTPUT_STREAM_TDATA() {
    OUTPUT_STREAM_TDATA = sobel_Mat2AXIvideo_U0_OUTPUT_STREAM_TDATA.read();
}

void sobel::thread_OUTPUT_STREAM_TDEST() {
    OUTPUT_STREAM_TDEST = sobel_Mat2AXIvideo_U0_OUTPUT_STREAM_TDEST.read();
}

void sobel::thread_OUTPUT_STREAM_TID() {
    OUTPUT_STREAM_TID = sobel_Mat2AXIvideo_U0_OUTPUT_STREAM_TID.read();
}

void sobel::thread_OUTPUT_STREAM_TKEEP() {
    OUTPUT_STREAM_TKEEP = sobel_Mat2AXIvideo_U0_OUTPUT_STREAM_TKEEP.read();
}

void sobel::thread_OUTPUT_STREAM_TLAST() {
    OUTPUT_STREAM_TLAST = sobel_Mat2AXIvideo_U0_OUTPUT_STREAM_TLAST.read();
}

void sobel::thread_OUTPUT_STREAM_TSTRB() {
    OUTPUT_STREAM_TSTRB = sobel_Mat2AXIvideo_U0_OUTPUT_STREAM_TSTRB.read();
}

void sobel::thread_OUTPUT_STREAM_TUSER() {
    OUTPUT_STREAM_TUSER = sobel_Mat2AXIvideo_U0_OUTPUT_STREAM_TUSER.read();
}

void sobel::thread_OUTPUT_STREAM_TVALID() {
    OUTPUT_STREAM_TVALID = sobel_Mat2AXIvideo_U0_OUTPUT_STREAM_TVALID.read();
}

void sobel::thread_ap_chn_write_sobel_Block_proc_U0_img_0_cols_V_channel() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ready_img_0_cols_V_channel_full_n.read())) {
        ap_chn_write_sobel_Block_proc_U0_img_0_cols_V_channel = ap_const_logic_0;
    } else {
        ap_chn_write_sobel_Block_proc_U0_img_0_cols_V_channel = sobel_Block_proc_U0_ap_done.read();
    }
}

void sobel::thread_ap_chn_write_sobel_Block_proc_U0_img_0_cols_V_channel1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ready_img_0_cols_V_channel1_full_n.read())) {
        ap_chn_write_sobel_Block_proc_U0_img_0_cols_V_channel1 = ap_const_logic_0;
    } else {
        ap_chn_write_sobel_Block_proc_U0_img_0_cols_V_channel1 = sobel_Block_proc_U0_ap_done.read();
    }
}

void sobel::thread_ap_chn_write_sobel_Block_proc_U0_img_0_rows_V_channel() {
    if (esl_seteq<1,1,1>(ap_reg_ready_img_0_rows_V_channel_full_n.read(), ap_const_logic_1)) {
        ap_chn_write_sobel_Block_proc_U0_img_0_rows_V_channel = ap_const_logic_0;
    } else {
        ap_chn_write_sobel_Block_proc_U0_img_0_rows_V_channel = sobel_Block_proc_U0_ap_done.read();
    }
}

void sobel::thread_ap_chn_write_sobel_Block_proc_U0_img_0_rows_V_channel1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ready_img_0_rows_V_channel1_full_n.read())) {
        ap_chn_write_sobel_Block_proc_U0_img_0_rows_V_channel1 = ap_const_logic_0;
    } else {
        ap_chn_write_sobel_Block_proc_U0_img_0_rows_V_channel1 = sobel_Block_proc_U0_ap_done.read();
    }
}

void sobel::thread_ap_chn_write_sobel_Block_proc_U0_img_1_cols_V() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ready_img_1_cols_V_full_n.read())) {
        ap_chn_write_sobel_Block_proc_U0_img_1_cols_V = ap_const_logic_0;
    } else {
        ap_chn_write_sobel_Block_proc_U0_img_1_cols_V = sobel_Block_proc_U0_ap_done.read();
    }
}

void sobel::thread_ap_chn_write_sobel_Block_proc_U0_img_1_rows_V() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ready_img_1_rows_V_full_n.read())) {
        ap_chn_write_sobel_Block_proc_U0_img_1_rows_V = ap_const_logic_0;
    } else {
        ap_chn_write_sobel_Block_proc_U0_img_1_rows_V = sobel_Block_proc_U0_ap_done.read();
    }
}

void sobel::thread_ap_done() {
    ap_done = ap_sig_hs_done.read();
}

void sobel::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(sobel_Block_proc_U0_ap_idle.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, sobel_AXIvideo2Mat_U0_ap_idle.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, sobel_Sobel_U0_ap_idle.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, sobel_Mat2AXIvideo_U0_ap_idle.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, img_0_rows_V_channel_empty_n.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, img_0_rows_V_channel1_empty_n.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, img_0_cols_V_channel_empty_n.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, img_0_cols_V_channel1_empty_n.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, img_1_rows_V_empty_n.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, img_1_cols_V_empty_n.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void sobel::thread_ap_ready() {
    ap_ready = ap_sig_top_allready.read();
}

void sobel::thread_ap_rst_n_inv() {
    ap_rst_n_inv =  (sc_logic) (~ap_rst_n.read());
}

void sobel::thread_ap_sig_hs_continue() {
    ap_sig_hs_continue = ap_const_logic_1;
}

void sobel::thread_ap_sig_hs_done() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, sobel_Mat2AXIvideo_U0_ap_done.read())) {
        ap_sig_hs_done = ap_const_logic_1;
    } else {
        ap_sig_hs_done = ap_const_logic_0;
    }
}

void sobel::thread_ap_sig_ready_img_0_cols_V_channel1_full_n() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ready_img_0_cols_V_channel1_full_n.read())) {
        ap_sig_ready_img_0_cols_V_channel1_full_n = img_0_cols_V_channel1_full_n.read();
    } else {
        ap_sig_ready_img_0_cols_V_channel1_full_n = ap_const_logic_1;
    }
}

void sobel::thread_ap_sig_ready_img_0_cols_V_channel_full_n() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ready_img_0_cols_V_channel_full_n.read())) {
        ap_sig_ready_img_0_cols_V_channel_full_n = img_0_cols_V_channel_full_n.read();
    } else {
        ap_sig_ready_img_0_cols_V_channel_full_n = ap_const_logic_1;
    }
}

void sobel::thread_ap_sig_ready_img_0_rows_V_channel1_full_n() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ready_img_0_rows_V_channel1_full_n.read())) {
        ap_sig_ready_img_0_rows_V_channel1_full_n = img_0_rows_V_channel1_full_n.read();
    } else {
        ap_sig_ready_img_0_rows_V_channel1_full_n = ap_const_logic_1;
    }
}

void sobel::thread_ap_sig_ready_img_0_rows_V_channel_full_n() {
    if (esl_seteq<1,1,1>(ap_reg_ready_img_0_rows_V_channel_full_n.read(), ap_const_logic_0)) {
        ap_sig_ready_img_0_rows_V_channel_full_n = img_0_rows_V_channel_full_n.read();
    } else {
        ap_sig_ready_img_0_rows_V_channel_full_n = ap_const_logic_1;
    }
}

void sobel::thread_ap_sig_ready_img_1_cols_V_full_n() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ready_img_1_cols_V_full_n.read())) {
        ap_sig_ready_img_1_cols_V_full_n = img_1_cols_V_full_n.read();
    } else {
        ap_sig_ready_img_1_cols_V_full_n = ap_const_logic_1;
    }
}

void sobel::thread_ap_sig_ready_img_1_rows_V_full_n() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ready_img_1_rows_V_full_n.read())) {
        ap_sig_ready_img_1_rows_V_full_n = img_1_rows_V_full_n.read();
    } else {
        ap_sig_ready_img_1_rows_V_full_n = ap_const_logic_1;
    }
}

void sobel::thread_ap_sig_top_allready() {
    ap_sig_top_allready = sobel_AXIvideo2Mat_U0_ap_ready.read();
}

void sobel::thread_img_0_cols_V_channel1_U_ap_dummy_ce() {
    img_0_cols_V_channel1_U_ap_dummy_ce = ap_const_logic_1;
}

void sobel::thread_img_0_cols_V_channel1_din() {
    img_0_cols_V_channel1_din = sobel_Block_proc_U0_ap_return_3.read();
}

void sobel::thread_img_0_cols_V_channel1_read() {
    img_0_cols_V_channel1_read = sobel_Sobel_U0_ap_ready.read();
}

void sobel::thread_img_0_cols_V_channel1_write() {
    img_0_cols_V_channel1_write = ap_chn_write_sobel_Block_proc_U0_img_0_cols_V_channel1.read();
}

void sobel::thread_img_0_cols_V_channel_U_ap_dummy_ce() {
    img_0_cols_V_channel_U_ap_dummy_ce = ap_const_logic_1;
}

void sobel::thread_img_0_cols_V_channel_din() {
    img_0_cols_V_channel_din = sobel_Block_proc_U0_ap_return_2.read();
}

void sobel::thread_img_0_cols_V_channel_read() {
    img_0_cols_V_channel_read = sobel_AXIvideo2Mat_U0_ap_ready.read();
}

void sobel::thread_img_0_cols_V_channel_write() {
    img_0_cols_V_channel_write = ap_chn_write_sobel_Block_proc_U0_img_0_cols_V_channel.read();
}

void sobel::thread_img_0_data_stream_0_V_U_ap_dummy_ce() {
    img_0_data_stream_0_V_U_ap_dummy_ce = ap_const_logic_1;
}

void sobel::thread_img_0_data_stream_0_V_din() {
    img_0_data_stream_0_V_din = sobel_AXIvideo2Mat_U0_img_data_stream_0_V_din.read();
}

void sobel::thread_img_0_data_stream_0_V_read() {
    img_0_data_stream_0_V_read = sobel_Sobel_U0_p_src_data_stream_0_V_read.read();
}

void sobel::thread_img_0_data_stream_0_V_write() {
    img_0_data_stream_0_V_write = sobel_AXIvideo2Mat_U0_img_data_stream_0_V_write.read();
}

void sobel::thread_img_0_data_stream_1_V_U_ap_dummy_ce() {
    img_0_data_stream_1_V_U_ap_dummy_ce = ap_const_logic_1;
}

void sobel::thread_img_0_data_stream_1_V_din() {
    img_0_data_stream_1_V_din = sobel_AXIvideo2Mat_U0_img_data_stream_1_V_din.read();
}

void sobel::thread_img_0_data_stream_1_V_read() {
    img_0_data_stream_1_V_read = sobel_Sobel_U0_p_src_data_stream_1_V_read.read();
}

void sobel::thread_img_0_data_stream_1_V_write() {
    img_0_data_stream_1_V_write = sobel_AXIvideo2Mat_U0_img_data_stream_1_V_write.read();
}

void sobel::thread_img_0_data_stream_2_V_U_ap_dummy_ce() {
    img_0_data_stream_2_V_U_ap_dummy_ce = ap_const_logic_1;
}

void sobel::thread_img_0_data_stream_2_V_din() {
    img_0_data_stream_2_V_din = sobel_AXIvideo2Mat_U0_img_data_stream_2_V_din.read();
}

void sobel::thread_img_0_data_stream_2_V_read() {
    img_0_data_stream_2_V_read = sobel_Sobel_U0_p_src_data_stream_2_V_read.read();
}

void sobel::thread_img_0_data_stream_2_V_write() {
    img_0_data_stream_2_V_write = sobel_AXIvideo2Mat_U0_img_data_stream_2_V_write.read();
}

void sobel::thread_img_0_rows_V_channel1_U_ap_dummy_ce() {
    img_0_rows_V_channel1_U_ap_dummy_ce = ap_const_logic_1;
}

void sobel::thread_img_0_rows_V_channel1_din() {
    img_0_rows_V_channel1_din = sobel_Block_proc_U0_ap_return_1.read();
}

void sobel::thread_img_0_rows_V_channel1_read() {
    img_0_rows_V_channel1_read = sobel_Sobel_U0_ap_ready.read();
}

void sobel::thread_img_0_rows_V_channel1_write() {
    img_0_rows_V_channel1_write = ap_chn_write_sobel_Block_proc_U0_img_0_rows_V_channel1.read();
}

void sobel::thread_img_0_rows_V_channel_U_ap_dummy_ce() {
    img_0_rows_V_channel_U_ap_dummy_ce = ap_const_logic_1;
}

void sobel::thread_img_0_rows_V_channel_din() {
    img_0_rows_V_channel_din = sobel_Block_proc_U0_ap_return_0.read();
}

void sobel::thread_img_0_rows_V_channel_read() {
    img_0_rows_V_channel_read = sobel_AXIvideo2Mat_U0_ap_ready.read();
}

void sobel::thread_img_0_rows_V_channel_write() {
    img_0_rows_V_channel_write = ap_chn_write_sobel_Block_proc_U0_img_0_rows_V_channel.read();
}

void sobel::thread_img_1_cols_V_U_ap_dummy_ce() {
    img_1_cols_V_U_ap_dummy_ce = ap_const_logic_1;
}

void sobel::thread_img_1_cols_V_din() {
    img_1_cols_V_din = sobel_Block_proc_U0_ap_return_5.read();
}

void sobel::thread_img_1_cols_V_read() {
    img_1_cols_V_read = sobel_Mat2AXIvideo_U0_ap_ready.read();
}

void sobel::thread_img_1_cols_V_write() {
    img_1_cols_V_write = ap_chn_write_sobel_Block_proc_U0_img_1_cols_V.read();
}

void sobel::thread_img_1_data_stream_0_V_U_ap_dummy_ce() {
    img_1_data_stream_0_V_U_ap_dummy_ce = ap_const_logic_1;
}

void sobel::thread_img_1_data_stream_0_V_din() {
    img_1_data_stream_0_V_din = sobel_Sobel_U0_p_dst_data_stream_0_V_din.read();
}

void sobel::thread_img_1_data_stream_0_V_read() {
    img_1_data_stream_0_V_read = sobel_Mat2AXIvideo_U0_img_data_stream_0_V_read.read();
}

void sobel::thread_img_1_data_stream_0_V_write() {
    img_1_data_stream_0_V_write = sobel_Sobel_U0_p_dst_data_stream_0_V_write.read();
}

void sobel::thread_img_1_data_stream_1_V_U_ap_dummy_ce() {
    img_1_data_stream_1_V_U_ap_dummy_ce = ap_const_logic_1;
}

void sobel::thread_img_1_data_stream_1_V_din() {
    img_1_data_stream_1_V_din = sobel_Sobel_U0_p_dst_data_stream_1_V_din.read();
}

void sobel::thread_img_1_data_stream_1_V_read() {
    img_1_data_stream_1_V_read = sobel_Mat2AXIvideo_U0_img_data_stream_1_V_read.read();
}

void sobel::thread_img_1_data_stream_1_V_write() {
    img_1_data_stream_1_V_write = sobel_Sobel_U0_p_dst_data_stream_1_V_write.read();
}

void sobel::thread_img_1_data_stream_2_V_U_ap_dummy_ce() {
    img_1_data_stream_2_V_U_ap_dummy_ce = ap_const_logic_1;
}

void sobel::thread_img_1_data_stream_2_V_din() {
    img_1_data_stream_2_V_din = sobel_Sobel_U0_p_dst_data_stream_2_V_din.read();
}

void sobel::thread_img_1_data_stream_2_V_read() {
    img_1_data_stream_2_V_read = sobel_Mat2AXIvideo_U0_img_data_stream_2_V_read.read();
}

void sobel::thread_img_1_data_stream_2_V_write() {
    img_1_data_stream_2_V_write = sobel_Sobel_U0_p_dst_data_stream_2_V_write.read();
}

void sobel::thread_img_1_rows_V_U_ap_dummy_ce() {
    img_1_rows_V_U_ap_dummy_ce = ap_const_logic_1;
}

void sobel::thread_img_1_rows_V_din() {
    img_1_rows_V_din = sobel_Block_proc_U0_ap_return_4.read();
}

void sobel::thread_img_1_rows_V_read() {
    img_1_rows_V_read = sobel_Mat2AXIvideo_U0_ap_ready.read();
}

void sobel::thread_img_1_rows_V_write() {
    img_1_rows_V_write = ap_chn_write_sobel_Block_proc_U0_img_1_rows_V.read();
}

void sobel::thread_sobel_AXIvideo2Mat_U0_INPUT_STREAM_TDATA() {
    sobel_AXIvideo2Mat_U0_INPUT_STREAM_TDATA = INPUT_STREAM_TDATA.read();
}

void sobel::thread_sobel_AXIvideo2Mat_U0_INPUT_STREAM_TDEST() {
    sobel_AXIvideo2Mat_U0_INPUT_STREAM_TDEST = INPUT_STREAM_TDEST.read();
}

void sobel::thread_sobel_AXIvideo2Mat_U0_INPUT_STREAM_TID() {
    sobel_AXIvideo2Mat_U0_INPUT_STREAM_TID = INPUT_STREAM_TID.read();
}

void sobel::thread_sobel_AXIvideo2Mat_U0_INPUT_STREAM_TKEEP() {
    sobel_AXIvideo2Mat_U0_INPUT_STREAM_TKEEP = INPUT_STREAM_TKEEP.read();
}

void sobel::thread_sobel_AXIvideo2Mat_U0_INPUT_STREAM_TLAST() {
    sobel_AXIvideo2Mat_U0_INPUT_STREAM_TLAST = INPUT_STREAM_TLAST.read();
}

void sobel::thread_sobel_AXIvideo2Mat_U0_INPUT_STREAM_TSTRB() {
    sobel_AXIvideo2Mat_U0_INPUT_STREAM_TSTRB = INPUT_STREAM_TSTRB.read();
}

void sobel::thread_sobel_AXIvideo2Mat_U0_INPUT_STREAM_TUSER() {
    sobel_AXIvideo2Mat_U0_INPUT_STREAM_TUSER = INPUT_STREAM_TUSER.read();
}

void sobel::thread_sobel_AXIvideo2Mat_U0_INPUT_STREAM_TVALID() {
    sobel_AXIvideo2Mat_U0_INPUT_STREAM_TVALID = INPUT_STREAM_TVALID.read();
}

void sobel::thread_sobel_AXIvideo2Mat_U0_ap_continue() {
    sobel_AXIvideo2Mat_U0_ap_continue = ap_const_logic_1;
}

void sobel::thread_sobel_AXIvideo2Mat_U0_ap_start() {
    sobel_AXIvideo2Mat_U0_ap_start = (ap_start.read() & img_0_rows_V_channel_empty_n.read() & img_0_cols_V_channel_empty_n.read());
}

void sobel::thread_sobel_AXIvideo2Mat_U0_img_cols_V_read() {
    sobel_AXIvideo2Mat_U0_img_cols_V_read = img_0_cols_V_channel_dout.read();
}

void sobel::thread_sobel_AXIvideo2Mat_U0_img_data_stream_0_V_full_n() {
    sobel_AXIvideo2Mat_U0_img_data_stream_0_V_full_n = img_0_data_stream_0_V_full_n.read();
}

void sobel::thread_sobel_AXIvideo2Mat_U0_img_data_stream_1_V_full_n() {
    sobel_AXIvideo2Mat_U0_img_data_stream_1_V_full_n = img_0_data_stream_1_V_full_n.read();
}

void sobel::thread_sobel_AXIvideo2Mat_U0_img_data_stream_2_V_full_n() {
    sobel_AXIvideo2Mat_U0_img_data_stream_2_V_full_n = img_0_data_stream_2_V_full_n.read();
}

void sobel::thread_sobel_AXIvideo2Mat_U0_img_rows_V_read() {
    sobel_AXIvideo2Mat_U0_img_rows_V_read = img_0_rows_V_channel_dout.read();
}

void sobel::thread_sobel_Block_proc_U0_ap_continue() {
    if ((esl_seteq<1,1,1>(ap_sig_ready_img_0_rows_V_channel_full_n.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_ready_img_0_cols_V_channel_full_n.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_ready_img_1_cols_V_full_n.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_ready_img_1_rows_V_full_n.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_ready_img_0_rows_V_channel1_full_n.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_ready_img_0_cols_V_channel1_full_n.read()))) {
        sobel_Block_proc_U0_ap_continue = ap_const_logic_1;
    } else {
        sobel_Block_proc_U0_ap_continue = ap_const_logic_0;
    }
}

void sobel::thread_sobel_Block_proc_U0_ap_start() {
    sobel_Block_proc_U0_ap_start = ap_start.read();
}

void sobel::thread_sobel_Block_proc_U0_cols() {
    sobel_Block_proc_U0_cols = cols.read();
}

void sobel::thread_sobel_Block_proc_U0_rows() {
    sobel_Block_proc_U0_rows = rows.read();
}

void sobel::thread_sobel_Mat2AXIvideo_U0_OUTPUT_STREAM_TREADY() {
    sobel_Mat2AXIvideo_U0_OUTPUT_STREAM_TREADY = OUTPUT_STREAM_TREADY.read();
}

void sobel::thread_sobel_Mat2AXIvideo_U0_ap_continue() {
    sobel_Mat2AXIvideo_U0_ap_continue = ap_sig_hs_continue.read();
}

void sobel::thread_sobel_Mat2AXIvideo_U0_ap_start() {
    sobel_Mat2AXIvideo_U0_ap_start = (img_1_rows_V_empty_n.read() & img_1_cols_V_empty_n.read());
}

void sobel::thread_sobel_Mat2AXIvideo_U0_img_cols_V_read() {
    sobel_Mat2AXIvideo_U0_img_cols_V_read = img_1_cols_V_dout.read();
}

void sobel::thread_sobel_Mat2AXIvideo_U0_img_data_stream_0_V_dout() {
    sobel_Mat2AXIvideo_U0_img_data_stream_0_V_dout = img_1_data_stream_0_V_dout.read();
}

void sobel::thread_sobel_Mat2AXIvideo_U0_img_data_stream_0_V_empty_n() {
    sobel_Mat2AXIvideo_U0_img_data_stream_0_V_empty_n = img_1_data_stream_0_V_empty_n.read();
}

void sobel::thread_sobel_Mat2AXIvideo_U0_img_data_stream_1_V_dout() {
    sobel_Mat2AXIvideo_U0_img_data_stream_1_V_dout = img_1_data_stream_1_V_dout.read();
}

void sobel::thread_sobel_Mat2AXIvideo_U0_img_data_stream_1_V_empty_n() {
    sobel_Mat2AXIvideo_U0_img_data_stream_1_V_empty_n = img_1_data_stream_1_V_empty_n.read();
}

void sobel::thread_sobel_Mat2AXIvideo_U0_img_data_stream_2_V_dout() {
    sobel_Mat2AXIvideo_U0_img_data_stream_2_V_dout = img_1_data_stream_2_V_dout.read();
}

void sobel::thread_sobel_Mat2AXIvideo_U0_img_data_stream_2_V_empty_n() {
    sobel_Mat2AXIvideo_U0_img_data_stream_2_V_empty_n = img_1_data_stream_2_V_empty_n.read();
}

void sobel::thread_sobel_Mat2AXIvideo_U0_img_rows_V_read() {
    sobel_Mat2AXIvideo_U0_img_rows_V_read = img_1_rows_V_dout.read();
}

void sobel::thread_sobel_Sobel_U0_ap_continue() {
    sobel_Sobel_U0_ap_continue = ap_const_logic_1;
}

void sobel::thread_sobel_Sobel_U0_ap_start() {
    sobel_Sobel_U0_ap_start = (img_0_rows_V_channel1_empty_n.read() & img_0_cols_V_channel1_empty_n.read());
}

void sobel::thread_sobel_Sobel_U0_p_dst_data_stream_0_V_full_n() {
    sobel_Sobel_U0_p_dst_data_stream_0_V_full_n = img_1_data_stream_0_V_full_n.read();
}

void sobel::thread_sobel_Sobel_U0_p_dst_data_stream_1_V_full_n() {
    sobel_Sobel_U0_p_dst_data_stream_1_V_full_n = img_1_data_stream_1_V_full_n.read();
}

void sobel::thread_sobel_Sobel_U0_p_dst_data_stream_2_V_full_n() {
    sobel_Sobel_U0_p_dst_data_stream_2_V_full_n = img_1_data_stream_2_V_full_n.read();
}

void sobel::thread_sobel_Sobel_U0_p_src_cols_V_read() {
    sobel_Sobel_U0_p_src_cols_V_read = img_0_cols_V_channel1_dout.read();
}

void sobel::thread_sobel_Sobel_U0_p_src_data_stream_0_V_dout() {
    sobel_Sobel_U0_p_src_data_stream_0_V_dout = img_0_data_stream_0_V_dout.read();
}

void sobel::thread_sobel_Sobel_U0_p_src_data_stream_0_V_empty_n() {
    sobel_Sobel_U0_p_src_data_stream_0_V_empty_n = img_0_data_stream_0_V_empty_n.read();
}

void sobel::thread_sobel_Sobel_U0_p_src_data_stream_1_V_dout() {
    sobel_Sobel_U0_p_src_data_stream_1_V_dout = img_0_data_stream_1_V_dout.read();
}

void sobel::thread_sobel_Sobel_U0_p_src_data_stream_1_V_empty_n() {
    sobel_Sobel_U0_p_src_data_stream_1_V_empty_n = img_0_data_stream_1_V_empty_n.read();
}

void sobel::thread_sobel_Sobel_U0_p_src_data_stream_2_V_dout() {
    sobel_Sobel_U0_p_src_data_stream_2_V_dout = img_0_data_stream_2_V_dout.read();
}

void sobel::thread_sobel_Sobel_U0_p_src_data_stream_2_V_empty_n() {
    sobel_Sobel_U0_p_src_data_stream_2_V_empty_n = img_0_data_stream_2_V_empty_n.read();
}

void sobel::thread_sobel_Sobel_U0_p_src_rows_V_read() {
    sobel_Sobel_U0_p_src_rows_V_read = img_0_rows_V_channel1_dout.read();
}

void sobel::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"INPUT_STREAM_TDATA\" :  \"" << INPUT_STREAM_TDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"INPUT_STREAM_TKEEP\" :  \"" << INPUT_STREAM_TKEEP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"INPUT_STREAM_TSTRB\" :  \"" << INPUT_STREAM_TSTRB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"INPUT_STREAM_TUSER\" :  \"" << INPUT_STREAM_TUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"INPUT_STREAM_TLAST\" :  \"" << INPUT_STREAM_TLAST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"INPUT_STREAM_TID\" :  \"" << INPUT_STREAM_TID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"INPUT_STREAM_TDEST\" :  \"" << INPUT_STREAM_TDEST.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"OUTPUT_STREAM_TDATA\" :  \"" << OUTPUT_STREAM_TDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"OUTPUT_STREAM_TKEEP\" :  \"" << OUTPUT_STREAM_TKEEP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"OUTPUT_STREAM_TSTRB\" :  \"" << OUTPUT_STREAM_TSTRB.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"OUTPUT_STREAM_TUSER\" :  \"" << OUTPUT_STREAM_TUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"OUTPUT_STREAM_TLAST\" :  \"" << OUTPUT_STREAM_TLAST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"OUTPUT_STREAM_TID\" :  \"" << OUTPUT_STREAM_TID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"OUTPUT_STREAM_TDEST\" :  \"" << OUTPUT_STREAM_TDEST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"rows\" :  \"" << rows.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"cols\" :  \"" << cols.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_rst_n\" :  \"" << ap_rst_n.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"INPUT_STREAM_TVALID\" :  \"" << INPUT_STREAM_TVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"INPUT_STREAM_TREADY\" :  \"" << INPUT_STREAM_TREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"OUTPUT_STREAM_TVALID\" :  \"" << OUTPUT_STREAM_TVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"OUTPUT_STREAM_TREADY\" :  \"" << OUTPUT_STREAM_TREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

