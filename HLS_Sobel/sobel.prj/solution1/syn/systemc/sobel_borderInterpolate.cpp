// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2014.4
// Copyright (C) 2014 Xilinx Inc. All rights reserved.
// 
// ===========================================================

#include "sobel_borderInterpolate.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic sobel_borderInterpolate::ap_const_logic_1 = sc_dt::Log_1;
const sc_lv<32> sobel_borderInterpolate::ap_const_lv32_B = "1011";
const sc_lv<1> sobel_borderInterpolate::ap_const_lv1_1 = "1";
const sc_lv<12> sobel_borderInterpolate::ap_const_lv12_1 = "1";
const sc_lv<13> sobel_borderInterpolate::ap_const_lv13_0 = "0000000000000";
const sc_lv<1> sobel_borderInterpolate::ap_const_lv1_0 = "0";
const sc_lv<14> sobel_borderInterpolate::ap_const_lv14_3FFE = "11111111111110";
const sc_logic sobel_borderInterpolate::ap_const_logic_0 = sc_dt::Log_0;

sobel_borderInterpolate::sobel_borderInterpolate(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_return);
    sensitive << ( ap_ce );
    sensitive << ( or_cond_fu_174_p2 );
    sensitive << ( newSel_cast_fu_170_p1 );
    sensitive << ( newSel9_fu_180_p3 );

    SC_METHOD(thread_len_cast4_cast_fu_53_p1);
    sensitive << ( len );

    SC_METHOD(thread_newSel9_fu_180_p3);
    sensitive << ( or_cond_58_reg_205 );
    sensitive << ( p_cast_cast_fu_115_p1 );
    sensitive << ( p_assign_1_fu_138_p2 );

    SC_METHOD(thread_newSel_cast_fu_170_p1);
    sensitive << ( newSel_fu_163_p3 );

    SC_METHOD(thread_newSel_fu_163_p3);
    sensitive << ( p_p2_reg_217 );
    sensitive << ( sel_tmp7_fu_158_p2 );

    SC_METHOD(thread_or_cond_58_fu_63_p2);
    sensitive << ( tmp_s_fu_57_p2 );
    sensitive << ( rev_fu_47_p2 );

    SC_METHOD(thread_or_cond_fu_174_p2);
    sensitive << ( sel_tmp7_fu_158_p2 );
    sensitive << ( sel_tmp2_fu_144_p2 );

    SC_METHOD(thread_p_assign_1_fu_138_p2);
    sensitive << ( tmp_5_fu_132_p2 );
    sensitive << ( p_p2_cast_cast_fu_118_p1 );

    SC_METHOD(thread_p_assign_fu_83_p2);
    sensitive << ( p_cast1_fu_35_p1 );

    SC_METHOD(thread_p_cast1_fu_35_p1);
    sensitive << ( p );

    SC_METHOD(thread_p_cast_cast_fu_115_p1);
    sensitive << ( p_read_reg_200 );

    SC_METHOD(thread_p_p2_cast_cast_fu_118_p1);
    sensitive << ( p_p2_reg_217 );

    SC_METHOD(thread_p_p2_fu_89_p3);
    sensitive << ( p_cast1_fu_35_p1 );
    sensitive << ( tmp_63_fu_75_p3 );
    sensitive << ( p_assign_fu_83_p2 );

    SC_METHOD(thread_rev_fu_47_p2);
    sensitive << ( tmp_fu_39_p3 );

    SC_METHOD(thread_sel_tmp1_fu_109_p2);
    sensitive << ( tmp_fu_39_p3 );
    sensitive << ( tmp_not_fu_103_p2 );

    SC_METHOD(thread_sel_tmp2_fu_144_p2);
    sensitive << ( tmp_1_reg_211 );
    sensitive << ( sel_tmp1_reg_228 );

    SC_METHOD(thread_sel_tmp6_demorgan_fu_148_p2);
    sensitive << ( or_cond_58_reg_205 );
    sensitive << ( tmp_1_reg_211 );

    SC_METHOD(thread_sel_tmp6_fu_152_p2);
    sensitive << ( sel_tmp6_demorgan_fu_148_p2 );

    SC_METHOD(thread_sel_tmp7_fu_158_p2);
    sensitive << ( tmp_3_reg_223 );
    sensitive << ( sel_tmp6_fu_152_p2 );

    SC_METHOD(thread_tmp_1_fu_69_p2);
    sensitive << ( len );
    sensitive << ( ap_ce );

    SC_METHOD(thread_tmp_3_fu_97_p2);
    sensitive << ( ap_ce );
    sensitive << ( p_p2_fu_89_p3 );
    sensitive << ( len_cast4_cast_fu_53_p1 );

    SC_METHOD(thread_tmp_4_cast_cast_fu_128_p1);
    sensitive << ( tmp_4_fu_121_p3 );

    SC_METHOD(thread_tmp_4_fu_121_p3);
    sensitive << ( len_read_reg_195 );

    SC_METHOD(thread_tmp_5_fu_132_p2);
    sensitive << ( tmp_4_cast_cast_fu_128_p1 );

    SC_METHOD(thread_tmp_63_fu_75_p3);
    sensitive << ( p );

    SC_METHOD(thread_tmp_fu_39_p3);
    sensitive << ( p );

    SC_METHOD(thread_tmp_not_fu_103_p2);
    sensitive << ( tmp_s_fu_57_p2 );

    SC_METHOD(thread_tmp_s_fu_57_p2);
    sensitive << ( ap_ce );
    sensitive << ( p_cast1_fu_35_p1 );
    sensitive << ( len_cast4_cast_fu_53_p1 );

    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "sobel_borderInterpolate_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, p, "(port)p");
    sc_trace(mVcdFile, len, "(port)len");
    sc_trace(mVcdFile, ap_return, "(port)ap_return");
    sc_trace(mVcdFile, ap_ce, "(port)ap_ce");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, len_read_reg_195, "len_read_reg_195");
    sc_trace(mVcdFile, p_read_reg_200, "p_read_reg_200");
    sc_trace(mVcdFile, or_cond_58_fu_63_p2, "or_cond_58_fu_63_p2");
    sc_trace(mVcdFile, or_cond_58_reg_205, "or_cond_58_reg_205");
    sc_trace(mVcdFile, tmp_1_fu_69_p2, "tmp_1_fu_69_p2");
    sc_trace(mVcdFile, tmp_1_reg_211, "tmp_1_reg_211");
    sc_trace(mVcdFile, p_p2_fu_89_p3, "p_p2_fu_89_p3");
    sc_trace(mVcdFile, p_p2_reg_217, "p_p2_reg_217");
    sc_trace(mVcdFile, tmp_3_fu_97_p2, "tmp_3_fu_97_p2");
    sc_trace(mVcdFile, tmp_3_reg_223, "tmp_3_reg_223");
    sc_trace(mVcdFile, sel_tmp1_fu_109_p2, "sel_tmp1_fu_109_p2");
    sc_trace(mVcdFile, sel_tmp1_reg_228, "sel_tmp1_reg_228");
    sc_trace(mVcdFile, tmp_fu_39_p3, "tmp_fu_39_p3");
    sc_trace(mVcdFile, p_cast1_fu_35_p1, "p_cast1_fu_35_p1");
    sc_trace(mVcdFile, len_cast4_cast_fu_53_p1, "len_cast4_cast_fu_53_p1");
    sc_trace(mVcdFile, tmp_s_fu_57_p2, "tmp_s_fu_57_p2");
    sc_trace(mVcdFile, rev_fu_47_p2, "rev_fu_47_p2");
    sc_trace(mVcdFile, tmp_63_fu_75_p3, "tmp_63_fu_75_p3");
    sc_trace(mVcdFile, p_assign_fu_83_p2, "p_assign_fu_83_p2");
    sc_trace(mVcdFile, tmp_not_fu_103_p2, "tmp_not_fu_103_p2");
    sc_trace(mVcdFile, tmp_4_fu_121_p3, "tmp_4_fu_121_p3");
    sc_trace(mVcdFile, tmp_4_cast_cast_fu_128_p1, "tmp_4_cast_cast_fu_128_p1");
    sc_trace(mVcdFile, tmp_5_fu_132_p2, "tmp_5_fu_132_p2");
    sc_trace(mVcdFile, p_p2_cast_cast_fu_118_p1, "p_p2_cast_cast_fu_118_p1");
    sc_trace(mVcdFile, sel_tmp6_demorgan_fu_148_p2, "sel_tmp6_demorgan_fu_148_p2");
    sc_trace(mVcdFile, sel_tmp6_fu_152_p2, "sel_tmp6_fu_152_p2");
    sc_trace(mVcdFile, sel_tmp7_fu_158_p2, "sel_tmp7_fu_158_p2");
    sc_trace(mVcdFile, newSel_fu_163_p3, "newSel_fu_163_p3");
    sc_trace(mVcdFile, sel_tmp2_fu_144_p2, "sel_tmp2_fu_144_p2");
    sc_trace(mVcdFile, p_cast_cast_fu_115_p1, "p_cast_cast_fu_115_p1");
    sc_trace(mVcdFile, p_assign_1_fu_138_p2, "p_assign_1_fu_138_p2");
    sc_trace(mVcdFile, or_cond_fu_174_p2, "or_cond_fu_174_p2");
    sc_trace(mVcdFile, newSel_cast_fu_170_p1, "newSel_cast_fu_170_p1");
    sc_trace(mVcdFile, newSel9_fu_180_p3, "newSel9_fu_180_p3");
#endif

    }
}

sobel_borderInterpolate::~sobel_borderInterpolate() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void sobel_borderInterpolate::thread_ap_clk_no_reset_() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_ce.read())) {
        len_read_reg_195 = len.read();
        or_cond_58_reg_205 = or_cond_58_fu_63_p2.read();
        p_p2_reg_217 = p_p2_fu_89_p3.read();
        p_read_reg_200 = p.read();
        sel_tmp1_reg_228 = sel_tmp1_fu_109_p2.read();
        tmp_1_reg_211 = tmp_1_fu_69_p2.read();
        tmp_3_reg_223 = tmp_3_fu_97_p2.read();
    }
}

void sobel_borderInterpolate::thread_ap_return() {
    ap_return = (!or_cond_fu_174_p2.read()[0].is_01())? sc_lv<14>(): ((or_cond_fu_174_p2.read()[0].to_bool())? newSel_cast_fu_170_p1.read(): newSel9_fu_180_p3.read());
}

void sobel_borderInterpolate::thread_len_cast4_cast_fu_53_p1() {
    len_cast4_cast_fu_53_p1 = esl_zext<13,12>(len.read());
}

void sobel_borderInterpolate::thread_newSel9_fu_180_p3() {
    newSel9_fu_180_p3 = (!or_cond_58_reg_205.read()[0].is_01())? sc_lv<14>(): ((or_cond_58_reg_205.read()[0].to_bool())? p_cast_cast_fu_115_p1.read(): p_assign_1_fu_138_p2.read());
}

void sobel_borderInterpolate::thread_newSel_cast_fu_170_p1() {
    newSel_cast_fu_170_p1 = esl_zext<14,13>(newSel_fu_163_p3.read());
}

void sobel_borderInterpolate::thread_newSel_fu_163_p3() {
    newSel_fu_163_p3 = (!sel_tmp7_fu_158_p2.read()[0].is_01())? sc_lv<13>(): ((sel_tmp7_fu_158_p2.read()[0].to_bool())? p_p2_reg_217.read(): ap_const_lv13_0);
}

void sobel_borderInterpolate::thread_or_cond_58_fu_63_p2() {
    or_cond_58_fu_63_p2 = (tmp_s_fu_57_p2.read() & rev_fu_47_p2.read());
}

void sobel_borderInterpolate::thread_or_cond_fu_174_p2() {
    or_cond_fu_174_p2 = (sel_tmp7_fu_158_p2.read() | sel_tmp2_fu_144_p2.read());
}

void sobel_borderInterpolate::thread_p_assign_1_fu_138_p2() {
    p_assign_1_fu_138_p2 = (!tmp_5_fu_132_p2.read().is_01() || !p_p2_cast_cast_fu_118_p1.read().is_01())? sc_lv<14>(): (sc_biguint<14>(tmp_5_fu_132_p2.read()) - sc_biguint<14>(p_p2_cast_cast_fu_118_p1.read()));
}

void sobel_borderInterpolate::thread_p_assign_fu_83_p2() {
    p_assign_fu_83_p2 = (!ap_const_lv13_0.is_01() || !p_cast1_fu_35_p1.read().is_01())? sc_lv<13>(): (sc_biguint<13>(ap_const_lv13_0) - sc_bigint<13>(p_cast1_fu_35_p1.read()));
}

void sobel_borderInterpolate::thread_p_cast1_fu_35_p1() {
    p_cast1_fu_35_p1 = esl_sext<13,12>(p.read());
}

void sobel_borderInterpolate::thread_p_cast_cast_fu_115_p1() {
    p_cast_cast_fu_115_p1 = esl_sext<14,12>(p_read_reg_200.read());
}

void sobel_borderInterpolate::thread_p_p2_cast_cast_fu_118_p1() {
    p_p2_cast_cast_fu_118_p1 = esl_zext<14,13>(p_p2_reg_217.read());
}

void sobel_borderInterpolate::thread_p_p2_fu_89_p3() {
    p_p2_fu_89_p3 = (!tmp_63_fu_75_p3.read()[0].is_01())? sc_lv<13>(): ((tmp_63_fu_75_p3.read()[0].to_bool())? p_assign_fu_83_p2.read(): p_cast1_fu_35_p1.read());
}

void sobel_borderInterpolate::thread_rev_fu_47_p2() {
    rev_fu_47_p2 = (tmp_fu_39_p3.read() ^ ap_const_lv1_1);
}

void sobel_borderInterpolate::thread_sel_tmp1_fu_109_p2() {
    sel_tmp1_fu_109_p2 = (tmp_fu_39_p3.read() | tmp_not_fu_103_p2.read());
}

void sobel_borderInterpolate::thread_sel_tmp2_fu_144_p2() {
    sel_tmp2_fu_144_p2 = (tmp_1_reg_211.read() & sel_tmp1_reg_228.read());
}

void sobel_borderInterpolate::thread_sel_tmp6_demorgan_fu_148_p2() {
    sel_tmp6_demorgan_fu_148_p2 = (or_cond_58_reg_205.read() | tmp_1_reg_211.read());
}

void sobel_borderInterpolate::thread_sel_tmp6_fu_152_p2() {
    sel_tmp6_fu_152_p2 = (sel_tmp6_demorgan_fu_148_p2.read() ^ ap_const_lv1_1);
}

void sobel_borderInterpolate::thread_sel_tmp7_fu_158_p2() {
    sel_tmp7_fu_158_p2 = (tmp_3_reg_223.read() & sel_tmp6_fu_152_p2.read());
}

void sobel_borderInterpolate::thread_tmp_1_fu_69_p2() {
    tmp_1_fu_69_p2 = (!len.read().is_01() || !ap_const_lv12_1.is_01())? sc_lv<1>(): sc_lv<1>(len.read() == ap_const_lv12_1);
}

void sobel_borderInterpolate::thread_tmp_3_fu_97_p2() {
    tmp_3_fu_97_p2 = (!p_p2_fu_89_p3.read().is_01() || !len_cast4_cast_fu_53_p1.read().is_01())? sc_lv<1>(): (sc_biguint<13>(p_p2_fu_89_p3.read()) < sc_biguint<13>(len_cast4_cast_fu_53_p1.read()));
}

void sobel_borderInterpolate::thread_tmp_4_cast_cast_fu_128_p1() {
    tmp_4_cast_cast_fu_128_p1 = esl_zext<14,13>(tmp_4_fu_121_p3.read());
}

void sobel_borderInterpolate::thread_tmp_4_fu_121_p3() {
    tmp_4_fu_121_p3 = esl_concat<12,1>(len_read_reg_195.read(), ap_const_lv1_0);
}

void sobel_borderInterpolate::thread_tmp_5_fu_132_p2() {
    tmp_5_fu_132_p2 = (!tmp_4_cast_cast_fu_128_p1.read().is_01() || !ap_const_lv14_3FFE.is_01())? sc_lv<14>(): (sc_biguint<14>(tmp_4_cast_cast_fu_128_p1.read()) + sc_bigint<14>(ap_const_lv14_3FFE));
}

void sobel_borderInterpolate::thread_tmp_63_fu_75_p3() {
    tmp_63_fu_75_p3 = p.read().range(11, 11);
}

void sobel_borderInterpolate::thread_tmp_fu_39_p3() {
    tmp_fu_39_p3 = p.read().range(11, 11);
}

void sobel_borderInterpolate::thread_tmp_not_fu_103_p2() {
    tmp_not_fu_103_p2 = (tmp_s_fu_57_p2.read() ^ ap_const_lv1_1);
}

void sobel_borderInterpolate::thread_tmp_s_fu_57_p2() {
    tmp_s_fu_57_p2 = (!p_cast1_fu_35_p1.read().is_01() || !len_cast4_cast_fu_53_p1.read().is_01())? sc_lv<1>(): (sc_bigint<13>(p_cast1_fu_35_p1.read()) < sc_bigint<13>(len_cast4_cast_fu_53_p1.read()));
}

}

